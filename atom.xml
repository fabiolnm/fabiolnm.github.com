<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Mind Share]]></title>
  <link href="http://mindshare.blog.br/atom.xml" rel="self"/>
  <link href="http://mindshare.blog.br/"/>
  <updated>2014-01-05T04:33:17-03:00</updated>
  <id>http://mindshare.blog.br/</id>
  <author>
    <name><![CDATA[Fábio L N Miranda]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tratamento de Concorrência em Aplicações Rails]]></title>
    <link href="http://mindshare.blog.br/blog/2014/01/05/tratamento-de-concorrencia-em-aplicacoes-rails/"/>
    <updated>2014-01-05T03:32:00-03:00</updated>
    <id>http://mindshare.blog.br/blog/2014/01/05/tratamento-de-concorrencia-em-aplicacoes-rails</id>
    <content type="html"><![CDATA[<p>Em aplicações web, onde transações podem ocorrer simultaneamente, é necessário estar atento às situações
onde a concorrência pode levar à violação da integridade dos dados da aplicação. Considere por exemplo
uma aplicação que gerencia créditos e débitos, e que armazena o saldo pré-computado de uma conta.</p>

<!-- more -->


<p>Este problema apresenta um cenário de condição de corrida: caso duas transações ocorram simultaneamente,
o saldo pode ser atualizado de forma indevida.</p>

<p>Suponhamos uma conta cujo saldo seja $0, e que ocorra uma transação de crédito (C) de $100, simultaneamente
com um débito (D) de $40. Sejam Ti os tempos em que os eventos ocorrem, T0 representando um estado anterior
às transações.</p>

<table class="concurrency_events">
<tr>
  <th></th>
  <th>C</th>
  <th>D</th>
  <th></th>
</tr>
<tr>
  <th>T0</th>
  <td>$0</td>
  <td>$0</td>
  <td>ambas as transações leêm o saldo inicial como $0</td>
</tr>
<tr>
  <th>T1</th>
  <td>$100</td>
  <td>$0</td>
  <td>a transação de crédito atualiza o saldo um pouco antes, assumindo o valor $100 naquela thread</td>
</tr>
<tr>
  <th>T2</th>
  <td>$100</td>
  <td>-$40</td>
  <td>a transação de débito atualiza o saldo um pouco depois, e o saldo assume valor -$40</td>
</tr>
<tr>
  <th>T3</th>
  <td colspan="2">$100 ou -$40</td>
  <td>o resultado da operação é igual ao da última transação executada</td>
</tr>
</table>


<br/>


<p>Na verdade, o que se deseja é que o saldo final seja $60.</p>

<p>Uma forma possível de reproduzir condições de corrida em aplicações Rails é adicionar um teste de integração:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;test_helper&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s2">&quot;UpdateBalance Integration Test&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">credit</span><span class="p">(</span><span class="n">balance</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="n">post_via_redirect</span> <span class="n">transactions_path</span><span class="p">,</span>
</span><span class='line'>      <span class="n">balance_id</span><span class="p">:</span> <span class="n">balance</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">value</span><span class="p">:</span> <span class="n">value</span><span class="p">,</span> <span class="n">type</span><span class="p">:</span> <span class="s1">&#39;Credit&#39;</span>
</span><span class='line'>    <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">reconnect!</span>                <span class="c1"># helps to avoid database lock timeouts between threads</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">debit</span><span class="p">(</span><span class="n">balance</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="n">post_via_redirect</span> <span class="n">transactions_path</span><span class="p">,</span>
</span><span class='line'>      <span class="n">balance_id</span><span class="p">:</span> <span class="n">balance</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">value</span><span class="p">:</span> <span class="n">value</span><span class="p">,</span> <span class="n">type</span><span class="p">:</span> <span class="s1">&#39;Debit&#39;</span>   <span class="c1"># helps to avoid database lock timeouts between threads</span>
</span><span class='line'>    <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">reconnect!</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;handles race conditions&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">n</span> <span class="o">=</span> <span class="mi">5</span>
</span><span class='line'>    <span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="n">balance</span> <span class="o">=</span> <span class="n">balances</span> <span class="s2">&quot;balance_</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="o">[</span>
</span><span class='line'>        <span class="no">Thread</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="n">credit</span> <span class="n">balance</span><span class="p">,</span> <span class="mi">100</span> <span class="p">},</span>
</span><span class='line'>        <span class="no">Thread</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="n">debit</span> <span class="n">balance</span><span class="p">,</span> <span class="mi">40</span> <span class="p">}</span>
</span><span class='line'>      <span class="o">].</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">join</span> <span class="p">}</span>
</span><span class='line'>      <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">reconnect!</span>              <span class="c1"># helps to avoid database lock timeouts</span>
</span><span class='line'>      <span class="n">balance</span><span class="o">.</span><span class="n">reload</span><span class="o">.</span><span class="n">value</span>
</span><span class='line'>    <span class="p">}</span><span class="o">.</span><span class="n">must_equal</span> <span class="o">[</span><span class="mi">60</span><span class="o">]</span> <span class="o">*</span> <span class="n">n</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  1<span class="o">)</span> Failure:
</span><span class='line'>UpdateBalance Integration Test#test_0001_handles race conditions <span class="o">[</span>/Users/fabio/workspace/miranti/LockingApp/test/integration/update_balance_test.rb:20<span class="o">]</span>:
</span><span class='line'>Expected: <span class="o">[</span>60, 60, 60, 60, 60<span class="o">]</span>
</span><span class='line'>  Actual: <span class="o">[</span>-40, 100, -40, 100, 100<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>É necessário, portanto, adicionar mecanismos para impedir que o saldo seja atualizado simultaneamente por diferentes transações.</p>

<h3>Optimistic Locking</h3>

<p>Para habilitar esta abordagem, basta adicionar uma coluna (<code>lock_version</code>, por default)
que é utilizada para &#8216;versionar&#8217; um registro no banco. Cada vez que o registro é atualizado,
a coluna é incrementada.</p>

<table class="concurrency_events">
<tr>
  <th></th>
  <th>Versão C</th>
  <th>C</th>
  <th>Versão D</th>
  <th>D</th>
  <th></th>
</tr>
<tr>
  <th>T0</th>
  <td>5</td>
  <td>$0</td>
  <td>5</td>
  <td>$0</td>
  <td>ambas as transações leêm o saldo inicial como $0 e versão 5</td>
</tr>
<tr>
  <th>T1</th>
  <td>6</td>
  <td>$100</td>
  <td>5</td>
  <td>$0</td>
  <td>a transação de crédito atualiza o saldo e incrementa a versão</td>
</tr>
<tr>
  <th>T2</th>
  <td>6</td>
  <td>$100</td>
  <td colspan="2" style="color: red; font-weight: bold">Stale</td>
  <td>
    quando tenta-se criar o débito, a aplicação percebe que a versão presente no banco já é mais atual
    que a lida inicialmente pela thread, e lança uma exceção <code>ActiveRecord::StaleObjectError</code>
  </td>
</tr>
<tr>
  <th>T3</th>
  <td>6</td>
  <td colspan="3">$100</td>
  <td>Débito não executado</td>
</tr>
</table>


<br />


<p>O tratamento do erro fica a cargo da aplicação.</p>

<p>Pode-se adotar uma abordagem &#8216;relaxada&#8217;, apresentando uma mensagem de erro para o usuário, solicitando
que repita/confirme a transação:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">it</span> <span class="s2">&quot;handles race conditions raising error&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">n</span> <span class="o">=</span> <span class="mi">5</span>
</span><span class='line'>    <span class="c1"># disparar o erro é o comportamento esperado</span>
</span><span class='line'>    <span class="n">assert_raise</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">StaleObjectError</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>        <span class="n">balance</span> <span class="o">=</span> <span class="n">balances</span> <span class="s2">&quot;balance_</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>        <span class="o">[</span>
</span><span class='line'>          <span class="no">Thread</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="n">credit</span> <span class="n">balance</span><span class="p">,</span> <span class="mi">100</span> <span class="p">},</span>
</span><span class='line'>          <span class="no">Thread</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="n">debit</span> <span class="n">balance</span><span class="p">,</span> <span class="mi">40</span> <span class="p">}</span>
</span><span class='line'>        <span class="o">].</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">join</span> <span class="p">}</span>
</span><span class='line'>        <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">reconnect!</span>
</span><span class='line'>        <span class="n">balance</span><span class="o">.</span><span class="n">reload</span><span class="o">.</span><span class="n">value</span> <span class="c1">#.must_equal 60</span>
</span><span class='line'>        <span class="c1"># Balance.find(balance.id).value</span>
</span><span class='line'>      <span class="p">}</span><span class="o">.</span><span class="n">must_equal</span> <span class="o">[</span><span class="mi">60</span><span class="o">]</span> <span class="o">*</span> <span class="n">n</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ou uma abordagem resiliente, obtendo a versão atualizada do saldo e operando sobre este a segunda transação:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># POST /transactions</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>    <span class="n">factor</span>    <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:type</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;Debit&#39;</span> <span class="p">?</span> <span class="o">-</span><span class="mi">1</span> <span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>    <span class="vi">@value</span>    <span class="o">=</span> <span class="n">factor</span> <span class="o">*</span> <span class="n">params</span><span class="o">[</span><span class="ss">:value</span><span class="o">].</span><span class="n">to_f</span>
</span><span class='line'>    <span class="vi">@balance</span>  <span class="o">=</span> <span class="no">Balance</span><span class="o">.</span><span class="n">find</span> <span class="n">params</span><span class="o">[</span><span class="ss">:balance_id</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># _version, _value = @balance.lock_version, @balance.value</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">success</span>   <span class="o">=</span> <span class="k">begin</span>
</span><span class='line'>                  <span class="n">create_transaction</span>
</span><span class='line'>                <span class="k">rescue</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">StaleObjectError</span>   <span class="c1"># recover and retry</span>
</span><span class='line'>                  <span class="no">Balance</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">reconnect!</span>
</span><span class='line'>                  <span class="vi">@balance</span><span class="o">.</span><span class="n">reload</span>
</span><span class='line'>                  <span class="n">create_transaction</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># log.debug &quot;#{@balance.id} (v#{_version} -&gt; v#{@balance.lock_version}): $#{_value} -&gt; $#{@balance.value}&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">success</span>
</span><span class='line'>      <span class="n">redirect_to</span> <span class="vi">@transaction</span><span class="p">,</span> <span class="n">notice</span><span class="p">:</span> <span class="s1">&#39;Transaction was successfully created.&#39;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">render</span> <span class="n">action</span><span class="p">:</span> <span class="s1">&#39;new&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">create_transaction</span>
</span><span class='line'>      <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">transaction</span> <span class="k">do</span>
</span><span class='line'>        <span class="vi">@transaction</span> <span class="o">=</span> <span class="no">Transaction</span><span class="o">.</span><span class="n">create</span> <span class="n">balance</span><span class="p">:</span> <span class="vi">@balance</span><span class="p">,</span> <span class="n">value</span><span class="p">:</span> <span class="vi">@value</span>
</span><span class='line'>        <span class="k">if</span> <span class="vi">@transaction</span><span class="o">.</span><span class="n">valid?</span>
</span><span class='line'>          <span class="vi">@balance</span><span class="o">.</span><span class="n">value</span> <span class="o">+=</span> <span class="vi">@transaction</span><span class="o">.</span><span class="n">value</span>
</span><span class='line'>          <span class="vi">@balance</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Running tests:</span>
</span><span class='line'>.
</span></code></pre></td></tr></table></div></figure>


<h3>Pessimistic Locking</h3>

<p>Na abordagem pessimista, um determinado registro fica bloqueado, a nível de banco de dados,
(por exemplo, <code>SELECT ... FOR UPDATE</code>) impedindo que seja alterado por uma transação concorrente.</p>

<p>Existem 3 formas de habilitar esta trava:</p>

<p>a) Diretamente na query:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="no">Balance</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="p">,</span> <span class="n">lock</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span>  <span class="c1"># deprecated</span>
</span></code></pre></td></tr></table></div></figure>


<p>b) No objeto:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">balance</span><span class="o">.</span><span class="n">lock!</span>  <span class="c1"># o objeto é recarregado, aplicando a trava</span>
</span><span class='line'>  <span class="c1"># some stuff...</span>
</span><span class='line'>  <span class="n">balance</span><span class="o">.</span><span class="n">save!</span>
</span></code></pre></td></tr></table></div></figure>


<p>c) Passando um bloco:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">balance</span><span class="o">.</span><span class="n">with_lock</span> <span class="k">do</span>
</span><span class='line'>    <span class="c1"># some stuff</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>A implementação do controller ficaria mais simples (nenhuma modificação necessária no teste):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># POST /transactions</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>    <span class="n">factor</span>    <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:type</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;Debit&#39;</span> <span class="p">?</span> <span class="o">-</span><span class="mi">1</span> <span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>    <span class="vi">@value</span>    <span class="o">=</span> <span class="n">factor</span> <span class="o">*</span> <span class="n">params</span><span class="o">[</span><span class="ss">:value</span><span class="o">].</span><span class="n">to_f</span>
</span><span class='line'>    <span class="vi">@balance</span>  <span class="o">=</span> <span class="no">Balance</span><span class="o">.</span><span class="n">find</span> <span class="n">params</span><span class="o">[</span><span class="ss">:balance_id</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">create_transaction</span>
</span><span class='line'>      <span class="n">redirect_to</span> <span class="vi">@transaction</span><span class="p">,</span> <span class="n">notice</span><span class="p">:</span> <span class="s1">&#39;Transaction was successfully created.&#39;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">render</span> <span class="n">action</span><span class="p">:</span> <span class="s1">&#39;new&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">create_transaction</span>
</span><span class='line'>      <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">transaction</span> <span class="k">do</span>
</span><span class='line'>        <span class="vi">@transaction</span> <span class="o">=</span> <span class="no">Transaction</span><span class="o">.</span><span class="n">create</span> <span class="n">balance</span><span class="p">:</span> <span class="vi">@balance</span><span class="p">,</span> <span class="n">value</span><span class="p">:</span> <span class="vi">@value</span>
</span><span class='line'>        <span class="k">if</span> <span class="vi">@transaction</span><span class="o">.</span><span class="n">valid?</span>
</span><span class='line'>          <span class="vi">@balance</span><span class="o">.</span><span class="n">with_lock</span> <span class="k">do</span>
</span><span class='line'>            <span class="vi">@balance</span><span class="o">.</span><span class="n">value</span> <span class="o">+=</span> <span class="vi">@transaction</span><span class="o">.</span><span class="n">value</span>
</span><span class='line'>            <span class="vi">@balance</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Considerações Finais</h3>

<p>Apesar de mais simples, a abordagem pessimista aplica travas no banco de dados, sendo suscetível a situações
de deadlock, ou seja, duas transações bloquearem uma à outra, caso criem dependência circular entre os
registros que elas travam. Além disso, a implementação da trava depende do banco de dados utilizado.</p>

<p>Na abordagem otimista, nenhum registro é travado (não há risco de deadlock), mas adiciona complexidade à
aplicação, dado que é necessário adicionar o tratamento para quando se tenta atualizar um objeto defasado (stale).
Todo o mecanismo de locking é feito pela aplicação, independente do banco de dados utilizado.</p>

<h3>Referências Bibliográficas</h3>

<ul>
<li><a href="http://api.rubyonrails.org/classes/ActiveRecord/Locking/Optimistic.html">Optimistic Locking</a></li>
<li><a href="http://api.rubyonrails.org/classes/ActiveRecord/Locking/Pessimistic.html">Pessimistic Locking</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dependency Injection em Ruby]]></title>
    <link href="http://mindshare.blog.br/blog/2014/01/05/dependency-injection-em-ruby/"/>
    <updated>2014-01-05T02:45:00-03:00</updated>
    <id>http://mindshare.blog.br/blog/2014/01/05/dependency-injection-em-ruby</id>
    <content type="html"><![CDATA[<p>O padrão de projeto Dependency Injection se popularizou bastante entre desenvolvedores Java,
por facilitar o teste de uma classe e seus colaboradores, ao remover dependências fortes
entre eles. Mas este padrão pode ser globalmente aplicado em outras linguagens? Ou seria
um indício de um defeito da linguagem?</p>

<!-- more -->


<p>Quando trabalhava com Java e tive a oportunidade de me aprofundar na prática de testes,
DI fornecia uma maneira elegante de manipular os colaboradores de uma classe, tornando
possível a verificação da maneira como os objetos interagiam entre si.</p>

<p>Um cenário real onde pude aplicar o pattern foi num teste de integração entre sistemas.
Havia um modelo que era responsável por persistir mídias (fotos / videos) num sistema A,
e notificar uma API de outro sistema B, para processar aquelas mídias.</p>

<p>Uma implementação sem DI:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">ProcessadorMidiaNoSistemaA</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">NotificadorSistemaB</span> <span class="n">notificador</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NotificadorSistemaB</span><span class="o">();</span>  <span class="c1">// (1)</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">processarMidia</span><span class="o">(</span><span class="n">Midia</span> <span class="n">midia</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">persisteMidiaLocalmente</span><span class="o">(</span><span class="n">midia</span><span class="o">);</span>
</span><span class='line'>    <span class="n">notificador</span><span class="o">.</span><span class="na">envia</span><span class="o">(</span><span class="n">midia</span><span class="o">);</span>                                           <span class="c1">// (2)</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Esta implementação possui dois inconvenientes do ponto de vista de testes:</p>

<ol>
<li>não é possível, de maneira simples, acessar o colaborador que notifica o sistema B,
para realizar verificações;</li>
<li>ao exercitar o método processarMidia, um teste inevitavelmente invocaria o notificador
real. O impacto para a suíte de testes poderia se refletir em:</li>
</ol>


<p>  2.1. testes mais lentos, caso a notificação seja demorada; ou</p>

<p>  2.2. testes frágeis, caso o sistema externo falhe (por exemplo fique fora do ar durante
  o teste). Neste caso, o sistema estaria funcionando corretamente, com os comportamentos
  esperados, mas a suíte quebraria por falhas que não são de sua responsabilidade.</p>

<p>A solução para este cenário, usando Dependency Injection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">NotificadorSistemaB</span> <span class="o">{</span>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">envia</span><span class="o">(</span><span class="n">Midia</span> <span class="n">midia</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NotificadorSistemaBImpl</span> <span class="kd">implements</span> <span class="n">NotificadorSistemaB</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">// go little horse, go!</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">ProcessadorMidiaNoSistemaA</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">NotificadorSistemaB</span> <span class="n">notificador</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">ProcessaMidiaNoSistemaA</span><span class="o">(</span><span class="n">NotificadorSistemaB</span> <span class="n">notificador</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">notificador</span> <span class="o">=</span> <span class="n">notificador</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">processarMidia</span><span class="o">(</span><span class="n">Midia</span> <span class="n">midia</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">persisteMidiaLocalmente</span><span class="o">(</span><span class="n">midia</span><span class="o">);</span>
</span><span class='line'>    <span class="n">notificador</span><span class="o">.</span><span class="na">envia</span><span class="o">(</span><span class="n">midia</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Com este novo arranjo, um teste para a classe ProcessaMidiaNoSistemaA pode injetar um mock,
via construtor, tornando:</p>

<ol>
<li>a classe verificável - o método processarMidia invocou o notificador?</li>
<li>implementação independente do sistema externo, injetando um notificador que não executasse
a lógica externa.</li>
</ol>


<p>Do ponto de vista de implementação, DI oferece uma forma de contornar aquilo que pode ser considerado
um defeito na linguagem Java. Foi necessário criar:</p>

<ol>
<li>uma interface,</li>
<li>uma implementação com a lógica de integração daquela interface, e</li>
<li>um construtor, para tornar a classe testável.</li>
</ol>


<p>Linguagens como Ruby, por sua vez, oferecem meios para tornar o design mais testável, sem a necessidade
da aplicação de DI:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">ProcessadorMidiaNoSistemaA</span>
</span><span class='line'>  <span class="n">def</span> <span class="nf">processar_midia</span><span class="o">(</span><span class="n">midia</span><span class="o">)</span>
</span><span class='line'>    <span class="n">persisteMidiaLocalmente</span><span class="o">(</span><span class="n">midia</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">notificador</span> <span class="o">=</span> <span class="n">NotificadorSistemaB</span><span class="o">.</span><span class="na">new</span>
</span><span class='line'>    <span class="n">notificador</span><span class="o">.</span><span class="na">envia</span><span class="o">(</span><span class="n">midia</span><span class="o">)</span>
</span><span class='line'>  <span class="n">end</span>
</span><span class='line'><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Um teste no RSpec poderia ser assim escrito:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">describe</span> <span class="no">ProcessadorMidiaNoSistemaA</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">subject</span> <span class="p">{</span> <span class="no">ProcessadorMidiaNoSistemaA</span><span class="o">.</span><span class="n">new</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:midia</span><span class="p">)</span> <span class="p">{</span> <span class="n">create</span> <span class="ss">:midia</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;notifica sistema B&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">NotificadorSistemaB</span><span class="o">.</span><span class="n">any_instance</span><span class="o">.</span><span class="n">should_receive</span><span class="p">(</span><span class="ss">:envia</span><span class="p">)</span><span class="o">.</span><span class="n">with</span><span class="p">(</span><span class="n">midia</span><span class="p">)</span>
</span><span class='line'>    <span class="n">subject</span><span class="o">.</span><span class="n">processar_midia</span><span class="p">(</span><span class="n">midia</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ruby, portanto, não é dependente de Dependency Injection quanto Java o é.</p>

<p>Entretanto, isto não invalida por completo a aplicação do pattern DI em alguns
cenários, caso o programador deseje desenhar construtores mais rígidos em suas
classes. Neste caso, porém, trata-se de decisão do programador, não de contornar
uma limitação da linguagem.</p>

<h3>Referências Bibliográficas</h3>

<ul>
<li><a href="http://david.heinemeierhansson.com/2012/dependency-injection-is-not-a-virtue.html">Dependency Injection is not a virtue</a></li>
<li><a href="http://c2.com/cgi/wiki?AreDesignPatternsMissingLanguageFeatures">Are Design Patterns Missing Language Features?</a></li>
<li><a href="http://www.codinghorror.com/blog/2007/07/rethinking-design-patterns.html">Rethinking Design Patterns</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Screencast: Ruby on Rails - How to Learn? - part 1]]></title>
    <link href="http://mindshare.blog.br/blog/2013/07/14/screencast-ruby-on-rails-como-comecar-parte1/"/>
    <updated>2013-07-14T22:46:00-03:00</updated>
    <id>http://mindshare.blog.br/blog/2013/07/14/screencast-ruby-on-rails-como-comecar-parte1</id>
    <content type="html"><![CDATA[<iframe width="560" height="315" src="http://mindshare.blog.br//www.youtube.com/embed/3TYrOp-6ltw" frameborder="0" allowfullscreen></iframe>




<!-- more -->


<p><a href="http://rubyonrails.org">rubyonrails.org</a> (!?)</p>

<h2>Get Started</h2>

<ul>
<li>Agile Web Dev book: Loja Virtual (Depot)</li>
<li>Rails Tutorial Book: Microblog (TDD / daily work / best practices)</li>
</ul>


<h2>1) Install Ruby via Rbenv!</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install git
</span><span class='line'>
</span><span class='line'>git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
</span><span class='line'>echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &gt;&gt; ~/.bash_profile
</span><span class='line'>echo 'eval "$(rbenv init -)"' &gt;&gt; ~/.bash_profile
</span><span class='line'>exec $SHELL -l
</span><span class='line'>
</span><span class='line'>git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
</span><span class='line'>rbenv install --list
</span><span class='line'>
</span><span class='line'>sudo apt-get install make
</span><span class='line'>rbenv install 2.0.0-p247</span></code></pre></td></tr></table></div></figure>


<h2>2) Install Rails via rubygems</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install rails
</span><span class='line'>rbenv rehash</span></code></pre></td></tr></table></div></figure>


<h2>3) New project</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install sqlite3 libsqlite3-dev nodejs # Database and JavaScript runtime
</span><span class='line'>
</span><span class='line'>rails new loja_virtual
</span><span class='line'>rails s
</span><span class='line'>open http://localhost:3000</span></code></pre></td></tr></table></div></figure>


<h2>4) Version Control with Git</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git init
</span><span class='line'>git add .
</span><span class='line'>git commit -m "Initial commit"</span></code></pre></td></tr></table></div></figure>


<h2>5) Github Social Coding</h2>

<p>Make development more collaborative</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote add origin git@github.com:&lt;username&gt;/&lt;projectname&gt;.git
</span><span class='line'>
</span><span class='line'># generate keypair - only if you don't have one
</span><span class='line'>cd ~/.ssh
</span><span class='line'>ssh-keygen -t rsa -C "your_email@example.com"
</span><span class='line'>
</span><span class='line'># copy this command's output to your Github SSH Keys management page
</span><span class='line'>cat id_rsa.pub
</span><span class='line'>
</span><span class='line'>git push -u origin master</span></code></pre></td></tr></table></div></figure>


<h2>Next Stop</h2>

<p>Deploy (!!!) to Amazon Web Services Free Tier</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Especificações de Views com MiniTest]]></title>
    <link href="http://mindshare.blog.br/blog/2012/11/25/especificacoes-de-views-com-minitest/"/>
    <updated>2012-11-25T19:30:00-03:00</updated>
    <id>http://mindshare.blog.br/blog/2012/11/25/especificacoes-de-views-com-minitest</id>
    <content type="html"><![CDATA[<p>As Views representam a Interface do Usuário de uma aplicação. Como tal, ficam sujeitas a frequentes mudanças, orientadas por
preocupações de usabilidade, de estética ou mesmo de evolução de requisitos.</p>

<p>No Rails, as views normalmente são arquivos html contendo código Ruby focado em apresentar dados para o usuário.
Via de regra, estes dados provêm de Models que foram recuperados por um Controller. Quando desenvolvemos <em>de fora para dentro</em>
(<em>outside-in development</em>), as necessidades das views orientam o projeto dos controllers e models, levando a APIs mais
consistentes e bem alinhadas com o comportamento desejado para a aplicação.</p>

<p>Tamanha a responsabilidade das Views, que elas não deveriam ser ignoradas nas atividades de teste. Este artigo ilustra
uma abordagem para testar views e alguns pontos que o desenvolvedor deve estar atento quando escreve este tipo de teste.</p>

<!-- more -->


<h2>View Specs</h2>

<p>A MiniTest ainda não oferece oficialmente suporte a specs de views. Isto fica evidente por dois motivos:</p>

<ul>
<li>ao fazer scaffold, seu gerador de código não cria um diretório <code>test/views</code></li>
<li>não há exemplos de view specs que possam servir de referênca para o desenvolvedor</li>
</ul>


<p>Existe, porém, um esforço nesse sentido, como pode ficar claro
<a href="https://groups.google.com/forum/?fromgroups=#!topic/minitest-rails/pJQNRZeua3U%5B1-25%5D">nesta thread</a>.
Estudando um pouco o código-fonte do minitest-rails, é possível encontrar
<a href="https://github.com/blowmage/minitest-rails/blob/91297faee6b008473aac0c39192d196331fd3caa/lib/minitest/rails/action_view.rb">pistas</a>
de como possibilitar a escrita de testes de views: se o nome do teste atender à expressão regular <code>/(Helper|View)( ?Test)?\z/i</code>
este teste será executado como um <code>MiniTest::Rails::ActionView::TestCase</code>.</p>

<p>Partindo do post anterior no qual foi criada uma aplicação de Quiz e foi feito scaffold de <code>Question</code>, crie o arquivo:</p>

<figure class='code'><figcaption><span>test/views/questions_view_test.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;minitest_helper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s1">&#39;Questions View Test&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;is a view spec&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note que:</p>

<ul>
<li>a descrição do teste <code>Question View Test</code> obedece à expressão regular de view specs,</li>
<li>foi fornecido um teste <code>it "is a view spec"</code> mas ainda não foi escrito o código desse teste.</li>
</ul>


<p>Veja a saída de sua execução:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake minitest:views
</span><span class='line'>
</span><span class='line'>Run options: --seed 63869
</span><span class='line'><span class="c"># Running tests:</span>
</span><span class='line'>S
</span><span class='line'>Finished tests in 0.201182s, 4.9706 tests/s, 0.0000 assertions/s.
</span><span class='line'>1 tests, 0 assertions, 0 failures, 0 errors, 1 skips
</span></code></pre></td></tr></table></div></figure>


<p>O <code>S</code> significa que o teste foi ignorado (s de <em>Skipped</em>).
Quando um teste é descrito sem uma implementação, a sinalização <code>S</code> indica que ele está pendente. Este recurso é
muito útil, pois serve para a criação de <em>TODO Lists</em> enquanto são modeladas as especificações de teste da aplicação.</p>

<p>Para que as view specs sejam executadas junto com os demais testes pelo comando <code>rake minitest:all</code>, é necessário
alterar a <a href="https://github.com/blowmage/minitest-rails/blob/91297faee6b008473aac0c39192d196331fd3caa/lib/minitest/rails/tasks/minitest.rake"><del>variável global MINITEST_TASKS</del></a>,
<a href="https://github.com/blowmage/minitest-rails/commit/fbcaf0a2be88272017a254e054d48b7b3de23cd4">propriedade MiniTest::Rails::Testing.default_tasks</a> no <code>Rakefile</code>:</p>

<figure class='code'><figcaption><span>Rakefile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env rake</span>
</span><span class='line'><span class="c1"># Add your own tasks in files placed in lib/tasks ending in .rake,</span>
</span><span class='line'><span class="c1"># for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="s1">&#39;../config/application&#39;</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">Quizz</span><span class="o">::</span><span class="no">Application</span><span class="o">.</span><span class="n">load_tasks</span>
</span><span class='line'>
</span><span class='line'><span class="no">MiniTest</span><span class="o">::</span><span class="no">Rails</span><span class="o">::</span><span class="no">Testing</span><span class="o">.</span><span class="n">default_tasks</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;views&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Configurado o MiniTest para rodar view specs, boa hora para comitar no git:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s2">&quot;Configura MiniTest para rodar view specs&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Afinal, o que testar nas Views?</h2>

<p>É muito importante, em todo tipo de teste, que se tenha um foco claro daquilo que precisa ser testado. Tome-se como exemplo
uma página de listagem de questões. Pode-se listar facilmente alguns comportamentos para ela:</p>

<ul>
<li>Quando não houver questão cadastrada

<ul>
<li>Deve exibir uma mensagem &#8220;Nenhuma questão cadastrada&#8221;</li>
<li>Não deve exibir a tabela de questões</li>
</ul>
</li>
<li>Quando houver questões

<ul>
<li>Não deve exibir a mensagem &#8220;Nenhuma questão cadastrada&#8221;</li>
<li>Deve exibir a tabela de questões</li>
</ul>
</li>
</ul>


<p>Note que as verificações listadas acima <strong>têm por objetivo testar se a view representa corretamente o estado da aplicação</strong>.
Ou seja, fornecendo-se para a view os dados num determinado estado (<strong>sem cadastros</strong> ou <strong>com cadastros</strong>), deve-se verificar se
ela exibe/omite corretamente uma mensagem ou uma tabela.</p>

<p>Os testes podem ser inicialmente escritos na forma de uma <em>TODO List</em>: desta forma tem-se sempre um roteiro de trabalho bem
definido e fica mais fácil manter o foco na tarefa atual, sempre em <a href="http://improveit.com.br/xp/principios/passos_bebe"><em>passinhos de bebê</em></a>.</p>

<figure class='code'><figcaption><span>test/views/questions_view_test.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;minitest_helper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s1">&#39;Questions View Test&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;index&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">describe</span> <span class="s2">&quot;with no questions&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">it</span> <span class="s2">&quot;shows empty message&quot;</span>
</span><span class='line'>      <span class="n">it</span> <span class="s2">&quot;omits table&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">describe</span> <span class="s2">&quot;with saved questions&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">it</span> <span class="s2">&quot;omits empty message&quot;</span>
</span><span class='line'>      <span class="n">it</span> <span class="s2">&quot;shows table&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Antes de prosseguir com a implementação de cada teste, um commitzinho cai bem:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s2">&quot;Adiciona spec inicial de Questions View&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>E agora, José? Como se testa isso?</h2>

<p>Nas views, quase sempre é preciso atentar para:</p>

<ul>
<li>Fornecer dados para a view no estado que se deseja verificar;</li>
<li>Renderizar a view e verificar se ela apresentou corretamente o estado que ela recebeu;

<ul>
<li>Selecionar elementos de marcação (<em>markup</em>) que têm valor semântico para a aplicação.</li>
</ul>
</li>
</ul>


<p>No artigo anterior, via scaffold, foram geradas as views, dentre as quais o foco do teste atual é:</p>

<figure class='code'><figcaption><span>app/views/questions/index.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>Listing questions<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;table&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;</span>Title<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;</span>Content<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;</span>Difficulty<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;&lt;/th&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;&lt;/th&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;&lt;/th&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'><span class="err">&lt;</span>% @questions.each do |question| %&gt;
</span><span class='line'>  <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= question.title %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= question.content %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= question.difficulty %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= link_to &#39;Show&#39;, question %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= link_to &#39;Edit&#39;, edit_question_path(question) %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= link_to &#39;Destroy&#39;, question, method: :delete, data: { confirm: &#39;Are you sure?&#39; } %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'><span class="err">&lt;</span>% end %&gt;
</span><span class='line'><span class="nt">&lt;/table&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Repare bem na linha 11: a view renderiza os dados a partir da variável de instância <code>@questions</code>
fornecida para ela. É através desta variável, portanto, que será configurado o estado do teste. Veja como
fica o setup (preparação) do teste:</p>

<figure class='code'><figcaption><span>Setup da spec &#8220;with no questions&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">describe</span> <span class="s2">&quot;with no questions&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@questions</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="n">render</span> <span class="n">file</span><span class="p">:</span> <span class="s2">&quot;questions/index&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">rendered</span> <span class="c1"># apenas para fins de demonstração</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ao fazer <code>@questions</code> ser um array vazio, coloca-se a variável no estado que se deseja testar
(<strong>nenhuma questão cadastrada</strong>). Na sequência, o método <code>render</code> renderiza a view <code>questions/index</code>.
O conteúdo da view pode ser então acessado via chamada <code>rendered</code>.</p>

<p>Por fim, o teste em si, para verificar se o conteúdo renderizado está de acordo com o comportamento esperado:</p>

<figure class='code'><figcaption><span>Verificações de conteúdo com assert_select</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">it</span> <span class="s2">&quot;shows empty message&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">assert_select</span> <span class="s2">&quot;p.info&quot;</span><span class="p">,</span> <span class="s2">&quot;Nenhuma questao cadastrada&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">it</span> <span class="s2">&quot;omits table&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">assert_select</span> <span class="s2">&quot;table&quot;</span><span class="p">,</span> <span class="mi">0</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>O <code>assert_select</code> <a href="http://apidock.com/rails/ActionDispatch/Assertions/SelectorAssertions/assert_select">pode ser usado de várias formas</a>
para realizar verificações no conteúdo de <code>rendered</code>.</p>

<p>No primeiro teste, ele verifica se a view renderizou um parágrafo com a classe CSS <code>.info</code>, e se contém a
respectiva mensagem.</p>

<p>No segundo, verifica se algum elemento <code>table</code> foi renderizado. Caso afirmativo, o teste falha, pois
o <code>assert_select</code> recebeu como segundo argumento um número, representando quantas vezes é esperado que
o elemento <code>table</code> ocorra - neste caso, zero!</p>

<p>Veja a saída dos testes:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake minitest:views
</span><span class='line'>Run options: --seed 50168
</span><span class='line'><span class="c"># Running tests:</span>
</span><span class='line'>FFSS
</span><span class='line'>Finished tests in 0.143716s, 27.8327 tests/s, 13.9163 assertions/s.
</span><span class='line'>
</span><span class='line'>  1<span class="o">)</span> Failure:
</span><span class='line'>test_0002_omits table<span class="o">(</span>Questions View Test::index::with no questions<span class="o">)</span> <span class="o">[</span>/Users/fabio/workspace/miranti/quizz/test/views/questions_view_test.rb:16<span class="o">]</span>:
</span><span class='line'>Expected exactly 0 elements matching <span class="s2">&quot;table&quot;</span>, found 1.
</span><span class='line'>
</span><span class='line'>  2<span class="o">)</span> Failure:
</span><span class='line'>test_0001_shows empty message<span class="o">(</span>Questions View Test::index::with no questions<span class="o">)</span> <span class="o">[</span>/Users/fabio/workspace/miranti/quizz/test/views/questions_view_test.rb:12<span class="o">]</span>:
</span><span class='line'>Expected at least 1 element matching <span class="s2">&quot;p.info&quot;</span>, found 0.
</span></code></pre></td></tr></table></div></figure>


<p>Excelente! Com os testes falhando, estamos no <span style="color: red">Vermelho</span> do ciclo
<span style="color: red">Vermelho</span> / <span style="color: limegreen">Verde</span> / <span style="color: brown">Refatore</span>
<a href="http://rtiweb.net/engenheiro-software/2011/05/18/tutorial-tdd-%E2%80%93-test-drive-development/#axzz2DGv3nW87"><em>Red/Green/Refactor</em></a>.
É hora de fornecer <strong><em>a implementação <span style="font-size: larger">mais simples</span></em></strong> que faça os testes passarem:</p>

<figure class='code'><figcaption><span>app/views/questions.index.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="nb">p</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;info&quot;</span><span class="o">&gt;</span><span class="no">Nenhuma</span> <span class="n">questao</span> <span class="n">cadastrada</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'><span class="sr">&lt;% unless @questions.empty? %&gt;</span>
</span><span class='line'><span class="sr">&lt;table&gt;</span>
</span><span class='line'><span class="sr">  ...</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">table</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Os testes passam:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake minitest:views
</span><span class='line'>Run options: --seed 54895
</span><span class='line'><span class="c"># Running tests:</span>
</span><span class='line'>..SS
</span><span class='line'>Finished tests in 0.301827s, 13.2526 tests/s, 6.6263 assertions/s.
</span><span class='line'>4 tests, 2 assertions, 0 failures, 0 errors, 2 skips
</span></code></pre></td></tr></table></div></figure>


<p>Estamos no <span style="color: limegreen">verde</span>, e fazendo progressos! Com gestos de
<a href="http://www.youtube.com/watch?v=GyT_KyAqDEc#t=70">cavalaria</a>, cantamos: Oppa Commit Time!</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git commit -am <span class="s2">&quot;Tratamento da view questions/index quando não há questões cadastradas&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Repetindo o processo, para o cenário seguinte, o teste fica escrito por:</p>

<figure class='code'><figcaption><span>Spec &#8220;com questões cadastradas&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">describe</span> <span class="s2">&quot;with five questions&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@questions</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">each</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="n">question</span> <span class="o">=</span> <span class="no">Question</span><span class="o">.</span><span class="n">new</span> <span class="n">title</span><span class="p">:</span> <span class="s2">&quot;Title </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">content</span><span class="p">:</span> <span class="s2">&quot;Mussum Impsum </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">difficulty</span><span class="p">:</span> <span class="n">i</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># estamos simulando uma questão salva no banco de dados, logo, precisa ter um id</span>
</span><span class='line'>      <span class="n">question</span><span class="o">.</span><span class="n">id</span> <span class="o">=</span> <span class="n">i</span>
</span><span class='line'>      <span class="n">question</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">render</span> <span class="n">file</span><span class="p">:</span> <span class="s2">&quot;questions/index&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;omits empty message&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">assert_select</span> <span class="s2">&quot;p.info&quot;</span><span class="p">,</span> <span class="n">count</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="n">text</span><span class="p">:</span> <span class="s2">&quot;Nenhuma questao cadastrada&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;shows table&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">assert_select</span> <span class="s2">&quot;table&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">assert_select</span> <span class="s2">&quot;thead tr&quot;</span><span class="p">,</span> <span class="mi">1</span>
</span><span class='line'>      <span class="n">assert_select</span> <span class="s2">&quot;tbody tr&quot;</span><span class="p">,</span> <span class="vi">@questions</span><span class="o">.</span><span class="n">count</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Repare nas verificações:</p>

<ul>
<li>Para a ausência da mensagem &#8220;Nenhuma questão cadastrada&#8221;: o <code>assert_select</code> recebe um hash,
com o atributo <code>count</code> informando que são esperados &#8220;zero elementos&#8221; <code>p.info</code> com o texto citado.</li>
<li>Para os elementos da tabela: o <code>assert_select</code> permite <strong><em>aninhamento</em> de verificações</strong>, ou seja, uma verificação
dentro de outra verificação. Primeiro é feita a seleção da tabela - caso ela seja encontrada, aí sim
verifica-se a presença de linhas da tabela, <code>thead tr</code> e <code>tbody tr</code>.</li>
</ul>


<p>Os testes falham, conforme era de se esperar:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake minitest:views
</span><span class='line'>Run options: --seed 57692
</span><span class='line'><span class="c"># Running tests:</span>
</span><span class='line'>FF..
</span><span class='line'>Finished tests in 0.367636s, 10.8803 tests/s, 13.6004 assertions/s.
</span><span class='line'>
</span><span class='line'>  1<span class="o">)</span> Failure:
</span><span class='line'>test_0002_shows table<span class="o">(</span>Questions View Test::index::with five questions<span class="o">)</span> <span class="o">[</span>/Users/fabio/workspace/miranti/quizz/test/views/questions_view_test.rb:37<span class="o">]</span>:
</span><span class='line'>Expected exactly 1 element matching <span class="s2">&quot;thead tr&quot;</span>, found 0.
</span><span class='line'>
</span><span class='line'>  2<span class="o">)</span> Failure:
</span><span class='line'>test_0001_omits empty message<span class="o">(</span>Questions View Test::index::with five questions<span class="o">)</span> <span class="o">[</span>/Users/fabio/workspace/miranti/quizz/test/views/questions_view_test.rb:32<span class="o">]</span>:
</span><span class='line'>Expected exactly 0 elements matching <span class="s2">&quot;p.info&quot;</span>, found 1.
</span></code></pre></td></tr></table></div></figure>


<p>Segue a implementação que faz os testes passar:</p>

<figure class='code'><figcaption><span>Versão final de app/views/questions/index.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">% if </span><span class="vi">@questions</span><span class="o">.</span><span class="n">empty?</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;p class=&quot;info&quot;&gt;</span><span class="no">Nenhuma</span> <span class="n">questao</span> <span class="n">cadastrada</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'><span class="sr">&lt;% else %&gt;</span>
</span><span class='line'><span class="sr">&lt;table&gt;</span>
</span><span class='line'><span class="sr">  &lt;thead&gt;</span>
</span><span class='line'><span class="sr">    &lt;tr&gt;</span>
</span><span class='line'><span class="sr">      &lt;th&gt;Title&lt;/</span><span class="n">th</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">th</span><span class="o">&gt;</span><span class="no">Content</span><span class="o">&lt;</span><span class="sr">/th&gt;</span>
</span><span class='line'><span class="sr">      &lt;th&gt;Difficulty&lt;/</span><span class="n">th</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">th</span><span class="o">&gt;&lt;</span><span class="sr">/th&gt;</span>
</span><span class='line'><span class="sr">      &lt;th&gt;&lt;/</span><span class="n">th</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">th</span><span class="o">&gt;&lt;</span><span class="sr">/th&gt;</span>
</span><span class='line'><span class="sr">    &lt;/</span><span class="n">tr</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/thead&gt;</span>
</span><span class='line'><span class="sr">&lt;% @questions.each do |question| %&gt;</span>
</span><span class='line'><span class="sr">  &lt;tbody&gt;</span>
</span><span class='line'><span class="sr">    &lt;tr&gt;</span>
</span><span class='line'><span class="sr">      &lt;td&gt;&lt;%= question.title %&gt;&lt;/</span><span class="n">td</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="sx">%= question.content %&gt;&lt;/td&gt;</span>
</span><span class='line'><span class="sx">      &lt;td&gt;&lt;%=</span> <span class="n">question</span><span class="o">.</span><span class="n">difficulty</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="sx">%= link_to &#39;Show&#39;, question %&gt;&lt;/td&gt;</span>
</span><span class='line'><span class="sx">      &lt;td&gt;&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Edit&#39;</span><span class="p">,</span> <span class="n">edit_question_path</span><span class="p">(</span><span class="n">question</span><span class="p">)</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Destroy&#39;</span><span class="p">,</span> <span class="n">question</span><span class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span><span class="p">,</span> <span class="n">data</span><span class="p">:</span> <span class="p">{</span> <span class="n">confirm</span><span class="p">:</span> <span class="s1">&#39;Are you sure?&#39;</span> <span class="p">}</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sr">/tr&gt;</span>
</span><span class='line'><span class="sr">  &lt;/</span><span class="n">tbody</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">&lt;/table&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>E passaram mesmo, ó:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake minitest:views
</span><span class='line'>Run options: --seed 24562
</span><span class='line'><span class="c"># Running tests:</span>
</span><span class='line'>....
</span><span class='line'>Finished tests in 0.118319s, 33.8069 tests/s, 50.7104 assertions/s.
</span><span class='line'>4 tests, 6 assertions, 0 failures, 0 errors, 0 skips
</span></code></pre></td></tr></table></div></figure>


<p>Por fim, um commitão, só pra variar, mas agora seguido de um push pro GitHub.</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git commit -am <span class="s2">&quot;Tratamento da view questions/index quando há questões cadastradas&quot;</span>
</span><span class='line'>git push origin master
</span></code></pre></td></tr></table></div></figure>


<h2>Considerações Finais</h2>

<h4>Muito teste pra pouco código?</h4>

<p>Neste artigo foram geradas 41 linhas de código de teste, como pode ser visto
<a href="https://github.com/fabiolnm/quiz/blob/16ea3bf9f236bbd0c4e57b4d4057e19b018e4a6a/test/views/questions_view_test.rb">neste commit</a>. No entanto,
foram adicionadas apenas <a href="https://github.com/fabiolnm/quiz/commit/16ea3bf9f236bbd0c4e57b4d4057e19b018e4a6a">7 linhas de código na view</a>.
Uma proporção de 1:6. O custo do código de testes realmente compensa o investimento em escrevê-los?</p>

<p>Tradicionalmente, as aplicações são testadas levantando-se um servidor e fazendo inspeção <em>manual</em> do funcionamento da aplicação, por meio de
navegação em suas páginas. Muitas aplicações carecem também de longas etapas de homologação, onde cada funcionalidade precisa ser validada
manualmente a cada release.</p>

<p>O teste automatizado não elimina os testes manuais - vide o artigo <a href="http://railspikes.com/2008/7/11/testing-is-overrated">Testing is Overrated</a> -
mas ajuda a manter o foco nas funcionalidades relevantes, e tornando a homologação mais ágil, com menos riscos.</p>

<p>Outra forma de pensar é: o Rails fornece muitos recursos que contribuem para o ganho de agilidade e produtividade (por exemplo, desde o scaffold,
já está disponível uma aplicação funcional, criada com uma única linha de comando). É bastante prudente utilizar com sabedoria essas facilidades,
e aproveitar o tempo que se ganhou como um bônus para investir em qualidade e confiabilidade dos softwares construídos com esta fantástica framework!</p>

<h4>Em nenhum momento foi aberto o navegador</h4>

<p>Desde que a aplicação Quiz foi criada no post anterior, em nenhum momento foi necessário abrir o navegador. Isso é interessantíssimo:
consegue-se evoluir as funcionalidades de uma aplicação Web sem a realização de testes manuais, sem a necessidade de navegação humana
para assegurar que a aplicação está funcionando.</p>

<p>Ao automatizar os testes de views, deve-se procurar um ponto de equilíbrio, onde os testes repetitivos possam ser automatizados, e os testes
manuais possam ser direcionados e focados nos aspectos mais relevantes/críticos da aplicação.</p>

<h4>Proporção 1:3</h4>

<p>É muito comum em aplicações Rails bem escritas que a relação entre a quantidade de código da aplicação e a quantidade de código de teste da aplicação
fique em torno de <a href="http://37signals.com/svn/posts/3159-testing-like-the-tsa">1:2 e 1:3</a>.</p>

<p>Se você desenvolvedor ainda não aderiu à disciplina de testes, é melhor começar a se sentir
<strong style="font-size: larger">CULPADO</strong>, pois está fazendo apenas <strong style="font-size: larger">UM TERÇO</strong> de seu trabalho.</p>

<p>Se você contratante ainda recruta desenvolvedores que não praticam a disciplina de testes, deveria ficar <strong style="font-size: larger">PREOCUPADO</strong>,
pois está pagando <strong style="font-size: larger">TRÊS VEZES MAIS CARO</strong>, e ainda corre um alto risco de receber um trabalho com baixa qualidade.</p>

<h4>Teste focado e desacoplado</h4>

<p>A <a href="http://guides.rubyonrails.org/getting_started.html#the-mvc-architecture">Arquitetura MVC</a> encoraja uma clara organização de código.
Os testes de views mostrados neste artigo estão totalmente alinhados com este princípio. Sendo o papel das views apresentar para o usuário
o estado da aplicação, a preparação (setup) dos testes coloca a aplicação no estado que se deseja testar, sem interação nem com os
controllers nem com o banco de dados. O teste é, portanto, focado em verificar apenas se a View está cumprindo seu papel.</p>

<p>Este desacoplamento é importantíssimo para a saúde da suíte de testes. Quando o acoplamento é alto, à medida que a aplicação cresce em
complexidade, é muito comum que uma pequena alteração de código provoque a quebra de muitos testes da suíte. Isto torna caras
até mesmo pequenas alterações, impactando na agilidade e na produtividade, alguns dos benefícios esperados quando se adota TDD.</p>

<p>No <a href="http://pragprog.com/book/hwcuc/the-cucumber-book">capítulo 6 do Livro do Cucumber, versão P1.0</a>, este sintoma é catalogado como
<string><em>Funcionalidade Frágil (Brittle Feature)</em></strong>. É uma dívida técnica que tende a aumentar rapidamente, pois quando isso
ocorre a tendência é tirar os testes do caminho, ou ter menos cuidado na escrita de novos testes.</p>

<h4>Nenhum acesso ao banco de dados</h4>

<p>Em todas as preparações (setups) de teste de views, os objetos de modelos foram instanciados em memória, simulando o estado que eles teriam na
aplicação. Para simular um objeto &#8220;salvo no banco de dados&#8221;, bastou setar o id do objeto, como se ele tivesse vindo do banco.</p>

<p>Isto torna os testes de views independentes dos arquivos de <a href="http://guides.rubyonrails.org/testing.html#the-low-down-on-fixtures"><em>fixtures</em></a>
de teste da aplicação. Normalmente esses testes também acabam rodando mais rápido, dado que não é feito nenhum acesso a banco. Isso contribui
para a rapidez e a saúde da suíte de testes.</p>

<h4>Modelagem Semântica da Página</h4>

<p>Outro benefício de fazer testes de views é que cada página acaba sendo construída de acordo com as preocupações
semânticas direcionadas pelos testes. Uma mensagem &#8220;Nenhum resultado encontrado&#8221; parece ficar bem em um parágrafo
com classe CSS info. Dados provenientes de bancos de dados normalmente se adaptam bem a estruturas tabulares. Mensagens de erro
normalmente são fortes candidatas a renderizar em listas, e por aí vai.</p>

<p>Este cuidado com organização semântica é importante inclusive no que tange às atividades de SEO. Além disso, é muito
mais fácil e menos caro um desenvolvedor entregar para um Web Designer um markup pronto, enxuto, para que o Web Designer
possa focar na criação das folhas de estilo que deixam o sistema mais elegante, do que o contrário - o desenvolvedor
pegar um design pronto e transformá-lo em algo funcional e que tenha significado para a aplicação.</p>

<p>O <a href="http://www.mezzoblue.com/zengarden/alldesigns/">CSS Zen Garden</a> é um exemplo que vale à pena citar de como é importante
um sistema ter um markup enxuto e consistente, que os web designers têm a liberdade de estilizar, sem precisar alterar
o markup.</p>

<h2>Bibliografia</h2>

<ul>
<li><a href="http://guides.rubyonrails.org/getting_started.html#the-mvc-architecture">The MVC Architecture</a></li>
<li><a href="http://pragprog.com/book/achbd/the-rspec-book">The RSpec Book, version P2.1, chapter 23</a></li>
<li><a href="http://apidock.com/rails/ActionDispatch/Assertions/SelectorAssertions/assert_select">API Dock - assert_select</a></li>
<li><a href="https://github.com/rails/rails/blob/e95b9d6c68b1e0bba3840d18fc0aa94ccf88776d/actionpack/lib/action_view/test_case.rb">ActionView::TestCase - a base para testes de views</a></li>
<li><a href="http://api.rubyonrails.org/classes/ActionView/TestCase/Behavior.html#method-i-locals">ActionView::TestCase::Behavior - a ponte entre as variáveis de instância do teste e da view,
e que fornece o método rendered</a></li>
<li><a href="http://api.rubyonrails.org/classes/ActionView/Helpers/RenderingHelper.html#method-i-render">Documentação do método render, usado nos testes de views</a></li>
<li><a href="http://www.mezzoblue.com/zengarden/alldesigns/">CSS Zen Garden</a></li>
<li><a href="http://railspikes.com/2008/7/11/testing-is-overrated">Testing is Overrated</a></li>
<li><a href="http://37signals.com/svn/posts/3159-testing-like-the-tsa">Testing like the TSA</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introdução à MiniTest]]></title>
    <link href="http://mindshare.blog.br/blog/2012/11/21/introducao-a-minitest/"/>
    <updated>2012-11-21T20:00:00-03:00</updated>
    <id>http://mindshare.blog.br/blog/2012/11/21/introducao-a-minitest</id>
    <content type="html"><![CDATA[<p>O framework Ruby-on-Rails possui muitas facilidades para a escrita de testes de aplicações web.
Historicamente, a API Test::Unit provê os recursos básicos, e muitas outras gems surgiram
para complementar ou mesmo substituir o Test::Unit (vide RSpec, Shoulda, Mocha, etc).</p>

<p>Em 2010, a versão 1.9 do Ruby introduziu uma versão atualizada da Test::Unit, chamada MiniTest.
Ao mesmo tempo que guarda retrocompatibilidade com o Test::Unit, a MiniTest introduz novos recursos
à linguagem, sendo a principal delas uma DSL (Domain Specific Language) para escrever testes num
estilo BDD (Behavior Driven Development), similar à sintaxe do RSpec.</p>

<!-- more -->


<p>Isto constitui um passo importante dentro da biblioteca-base do Ruby, agora numa posição mais neutra
na <a href="http://akitaonrails.com/2011/04/17/a-controversia-test-unit-vs-rspec-cucumber">controvérsia TDD x BDD</a>.
No Rails 4, a <a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/test_case.rb">Test::Unit deverá subclassear MiniTest::Spec</a>,
para se ter uma idéia de quão significativa é essa mudança.</p>

<h2>Iniciando um Projeto, sem a Test::Unit</h2>

<p>O comando <code>rails new nome_do_projeto</code>, por padrão, cria um diretório com a estrutura padrão do Test::Unit:</p>

<pre><code>▾ test/
  ▾ fixtures/
  ▾ functional/
  ▾ integration/
  ▾ performance/
  ▾ unit/
  test_helper.rb
</code></pre>

<p>Como pretendemos usar a MiniTest, podemos criar o projeto passando o argumento -T, equivalente a &#8211;skip-test-unit,
ou seja, cria o projeto, mas pulando a criação da estrutura básica do Test::Unit:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rails new quiz -T
</span></code></pre></td></tr></table></div></figure>


<p>Criado o projeto, é um bom momento para versionar com o Git</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git init
</span><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s2">&quot;Commit inicial&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Apesar deste post não ser sobre git, vamos seguir as boas práticas e dar passos pequenos e consistentes,
comitando cada avanço que seja significativo.</p>

<h2>MiniTest-Rails</h2>

<p>A gem <a href="https://github.com/blowmage/minitest-rails">minitest-rails</a> vem suprindo as extensões necessárias para
usar a MiniTest em projetos Rails. É necessário adicioná-la ao Gemfile:</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;minitest-rails&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Em seguida, é necessário instalar a gem com o bundler, e utilizar um rails generator para
criar o arquivo test/minitest_helper.rb:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bundle install
</span><span class='line'>rails generate mini_test:install
</span></code></pre></td></tr></table></div></figure>


<p>Bom momento pra comitar:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s2">&quot;Instala minitest-rails&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Podemos então prosseguir para a adição da primeira funcionalidade de um Quiz: a criação de Perguntas.
Para acelerar o desenvolvimento, nada melhor que utilizar o rails scaffold, que cria toda uma estrutura MVC como
ponto de partida. Antes de rodar o scaffold, porém, devemos configurar o generator para gerar os testes utilizando
a DSL do MiniTest::Spec:</p>

<figure class='code'><figcaption><span>config/application.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">generators</span> <span class="k">do</span> <span class="o">|</span><span class="n">g</span><span class="o">|</span>
</span><span class='line'>  <span class="n">g</span><span class="o">.</span><span class="n">test_framework</span> <span class="ss">:mini_test</span><span class="p">,</span> <span class="n">spec</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ao rodar o generator:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rails generate scaffold Question title:string content:text difficulty:integer
</span></code></pre></td></tr></table></div></figure>


<p>É gerada a estrutura básica da aplicação. Atenção especial para o diretório de testes:</p>

<pre><code>▾ test/
  ▾ controllers/
      questions_controller_test.rb
  ▾ fixtures/
      questions.yml
  ▾ helpers/
      questions_helper_test.rb
  ▾ models/
      question_test.rb
</code></pre>

<p>Foi gerada, portanto, a estrutura da aplicação, e os respectivos testes para os
Models, Controllers e Views que foram gerados. Antes de mergulhar a fundo em cada um desses testes,
vale a pena rodar a suite de testes. Primeiro, roda-se a migration de criação da tabela questions no
banco de dados:</p>

<figure class='code'><figcaption><span>terminal - execução da migration criada no scaffold</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake db:migrate
</span></code></pre></td></tr></table></div></figure>


<p>Uma vez que não haja mais nenhuma migration pendente, os testes podem ser executados com um dos comandos:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake <span class="nb">test</span>                 <span class="c">#</span>
</span><span class='line'>rake minitest             <span class="c"># rodam todos os testes</span>
</span><span class='line'>rake minitest:all         <span class="c">#</span>
</span><span class='line'>
</span><span class='line'>rake minitest:models      <span class="c"># roda apenas os testes de unidade dos models</span>
</span><span class='line'>rake minitest:helpers     <span class="c"># roda apenas os testes dos helpers das views</span>
</span><span class='line'>rake minitest:controllers <span class="c"># roda apenas os testes funcionais dos controllers</span>
</span></code></pre></td></tr></table></div></figure>


<p>Veja abaixo saída da execução dos testes. Primeiro são executados os testes de models, depois os helpers e por fim os funcionais.
Cada <code>.</code> após a linha <code># Running tests</code> é um teste executado com sucesso. Cada <code>F</code>, um teste falhando. Os testes funcionais
gerados via scaffold são 7, um para cada <a href="http://guides.rubyonrails.org/routing.html#crud-verbs-and-actions">ação de um recurso RESTful</a>.</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake minitest:all
</span><span class='line'>
</span><span class='line'>Run options: --seed 27504
</span><span class='line'><span class="c"># Running tests:</span>
</span><span class='line'>.
</span><span class='line'>Finished tests in 0.063599s, 15.7235 tests/s, 15.7235 assertions/s.
</span><span class='line'>1 tests, 1 assertions, 0 failures, 0 errors, 0 skips
</span><span class='line'>
</span><span class='line'>Run options: --seed 3609
</span><span class='line'><span class="c"># Running tests:</span>
</span><span class='line'>F
</span><span class='line'>Finished tests in 0.070579s, 14.1685 tests/s, 14.1685 assertions/s.
</span><span class='line'>  1<span class="o">)</span> Failure:
</span><span class='line'>test_0001_must be a real <span class="nb">test</span><span class="o">(</span>QuestionsHelper<span class="o">)</span> <span class="o">[</span>/Users/fabio/workspace/miranti/quizz/test/helpers/questions_helper_test.rb:6<span class="o">]</span>:
</span><span class='line'>Need real tests
</span><span class='line'>1 tests, 1 assertions, 1 failures, 0 errors, 0 skips
</span><span class='line'>
</span><span class='line'>Run options: --seed 4676
</span><span class='line'><span class="c"># Running tests:</span>
</span><span class='line'>.......
</span><span class='line'>Finished tests in 0.150315s, 46.5689 tests/s, 66.5270 assertions/s.
</span><span class='line'>7 tests, 10 assertions, 0 failures, 0 errors, 0 skips
</span><span class='line'>
</span><span class='line'>Errors running minitest:helpers! <span class="c">#&lt;RuntimeError: Command failed with status (1): [ruby -I&quot;lib:test&quot; -I&quot;/Users/fabio/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/rake-10.0.1/lib&quot; &quot;/Users/fabio/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/rake-10.0.1/lib/rake/rake_test_loader.rb&quot; &quot;test/helpers/**/*_test.rb&quot; ]&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Para finalizar esta parte introdutória, podemos fazer os commits no git:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add config/application.rb
</span><span class='line'>git commit -m <span class="s2">&quot;Configura gerador de código do MiniTest&quot;</span>
</span><span class='line'>
</span><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s2">&quot;Adiciona scaffold do modelo Question&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>E fazer um push para um repositório remoto, por exemplo o <a href="https://github.com">GitHub</a>:</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git remote add origin git@github.com:fabiolnm/quiz.git
</span><span class='line'>git push -u origin master
</span></code></pre></td></tr></table></div></figure>


<h2>Conclusão</h2>

<p>Neste post introdutório:</p>

<ul>
<li>Iniciamos uma aplicação sem a Test::Unit</li>
<li>Instalamos e configuramos a MiniTest</li>
<li>Geramos algumas specs via rails scaffolding</li>
<li>Rodamos os testes com o Rake</li>
</ul>


<p>Nos próximos posts desta série, serão explorados em maior profundidade cada um dos tipos de spec - de models, views e controllers.</p>

<h2>Bibliografia</h2>

<ul>
<li><a href="http://guides.rubyonrails.org/testing.html">A Guide to Testing Rails Applications</a></li>
<li><a href="http://www.bootspring.com/2010/09/22/minitest-rubys-test-framework">MiniTest: a framework de teste do Ruby 1.9</a></li>
<li><a href="http://www.rubyflow.com/items/8037-a-path-to-rails-4-with-minitest-spec">A Path to Rails 4 with MiniTest::Spec</a></li>
<li><a href="http://metaskills.net/2011/03/26/using-minitest-spec-with-rails">Using MiniTest::Spec with Rails</a></li>
<li><a href="http://akitaonrails.com/2011/04/17/a-controversia-test-unit-vs-rspec-cucumber">A controvérsia Test::Unit vs RSpec/Cucumber</a></li>
<li><a href="http://blog.rawonrails.com/2012/01/better-way-of-testing-rails-application.html">A better way of testing Rails application with minitest</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MultiModel forms, parte 4: Nested Forms interativos usando Knockout.js]]></title>
    <link href="http://mindshare.blog.br/blog/2012/09/25/multimodel-forms-parte-4-nested-forms-usando-knockout-js/"/>
    <updated>2012-09-25T00:00:00-03:00</updated>
    <id>http://mindshare.blog.br/blog/2012/09/25/multimodel-forms-parte-4-nested-forms-usando-knockout-js</id>
    <content type="html"><![CDATA[<div class='post'>
<p>
  No terceiro post desta série, foi mostrado que os FormBuilders do Rails são capazes de lidar com Nested Models para
  a criação de formulários estáticos. Este post apresenta uma maneira client-side interativa de gerar campos Nested Forms.
</p>
<!-- MORE -->
<ul>
  <li><a href="http://mindshare.blog.br/blog/2012/08/01/um-formulario-multiplos-modelos" target="_blank">Parte 1: Nested Models - One-to-One</a></li>
  <li><a href="http://mindshare.blog.br/blog/2012/08/05/multimodel-forms-parte-2-one-to-many" target="_blank">Parte 2: Nested Models - One-to-Many</a></li>
  <li><a href="http://mindshare.blog.br/blog/2012/08/06/multimodel-forms-parte-3-nested-forms" target="_blank">Parte 3: Nested Forms</a></li>
  <li><a href="http://mindshare.blog.br/blog/2012/09/25/multimodel-forms-parte-4-nested-forms-usando-knockout-js"
      target="_blank">Parte 4: Nested Forms interativos usando Knockout.js</a></li>
</ul>
O código desta aplicação de exemplo está disponível neste <a href="https://github.com/fabiolnm/Multi-Model-Forms">repositório Github</a>.


<p>
  Nos posts anteriores desta série, foi mostrado como fazer uso dos Nested Models e Nested Forms,
  recursos poderosos que o Rails oferece para a edição de entidades relacionadas.
</p>
<p>
  Partindo de um domínio composto por três entidades - Person, User e Permissions - foi mostrado que,
  numa única chamada person.create(attrs) - onde attrs é um hash contendo atributos dos três modelos obedecendo
  a uma notação especial - o Rails consegue criar os diferentes objetos que compõem a associação.
</p>
<p>
  Por sua vez, os FormBuilders do Rails podem fazer uso de Nested Models, permitindo prototipar Nested Forms que podem
  manipular simultaneamente vários objetos relacionados entre si. Neste quarto e último post, será usado o framework
  Knockout.js para a construção de formulários interativos baseados no Nested Forms.
</p>

<h2>Knockout.js</h2>
<p>
  O Knockout.js é um framework JavaScript que implementa o padrão MVVM (Model-View View-Model). Possui uma documentação
  didática e abrangente - incluindo um <a href="http://learn.knockoutjs.com/">tutorial interativo</a>!
</p>
<p>O exercício deste post será reimplementar a tela abaixo</p>
<center><img src="http://mindshare.blog.br/images/2012/08/06/destroy.png" /></center>
<p>Para que as permissões possam ser adicionadas / removidas de forma interativa:</p>
<center><img src="http://mindshare.blog.br/images/2012/09/25/01-form-interativo.png" /></center>

<h3>Knockout.js Setup</h3>
<h4>Asset Pipeline</h4>
<p>Graças à gem knockoutjs-rails, o setup é tão simples quanto adicionar uma gem ao projeto:</p>
<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;knockoutjs-rails&#39;</span><span class="p">,</span> <span class="n">git</span><span class="p">:</span> <span class="s2">&quot;git://github.com/fabiolnm/knockoutjs-rails.git&quot;</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>
<p>e duas diretivas ao manifesto do asset pipeline:</p>
<figure class='code'><figcaption><span>app/assets/javascripts/application.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="sr">//</span><span class="o">=</span> <span class="nb">require</span> <span class="n">knockout</span>
</span><span class='line'><span class="sr">//</span><span class="o">=</span> <span class="nb">require</span> <span class="n">knockout</span><span class="o">.</span><span class="n">mapping</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>
<h4>Via tradicional</h4>
<p>
  Caso não esteja usando o asset pipeline, segundo as
  <a href="http://knockoutjs.com/documentation/installation.html">instruções de instalação</a>,
  pode-se referenciar a biblioteca via CDNs, ou baixar os arquivos em algum diretório do projeto
  onde possam ser incluídos via diretiva <% javascript_include_tag %>.
</p>

<h3>ViewModels, Observables e Bindings</h3>
<p>
  ViewModels são representações que encapsulam um modelo e suas interações com a view.
  Um ViewModel pode possuir atributos Observable: a View atualiza-se automagicamente em resposta a alterações nestes atributos.
  A view também consegue alterar o estado do modelo através dos métodos do view_model.
</p>
<p>
  No exemplo abaixo, PermissionListViewModel encapsula um Lista de Permissões (modelo) num <i>array observável</i>,
  e disponibiliza métodos add e empty para que a View possa interagir com o modelo.
</p>
<figure class='code'><figcaption><span>app/assets/javascripts/people.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">PermissionListViewModel</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">permissions</span> <span class="o">=</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">observableArray</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">add</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">permissions</span><span class="p">.</span><span class="nx">add</span><span class="p">({});</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">empty</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">permissions</span><span class="p">().</span><span class="nx">length</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  Note que o ViewModel não possui referência nenhuma aos elementos da View.
  Toda a ligação é feita de forma declarativa, por meio de data-bindings:
</p>
<figure class='code'><figcaption><span>app/views/people/_form.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;table</span> <span class="na">id=</span><span class="s">&quot;permissions_table&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;caption&gt;</span>Permissões<span class="nt">&lt;/caption&gt;</span>
</span><span class='line'>  <span class="nt">&lt;thead</span> <span class="na">date-bind=</span><span class="s">&quot;ifnot: permissions().length == 0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;tr&gt;&lt;th&gt;</span>Nível<span class="nt">&lt;/th&gt;&lt;th&gt;</span>Liberações<span class="nt">&lt;/th&gt;&lt;th&gt;</span>Remover<span class="nt">&lt;/th&gt;&lt;/tr&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/thead&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tbody</span> <span class="na">data-bind=</span><span class="s">&quot;foreach: permissions&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;&lt;select&gt;</span>
</span><span class='line'>        <span class="nt">&lt;option&gt;&lt;/option&gt;</span>
</span><span class='line'>        <span class="nt">&lt;option&gt;</span>Admin<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>        <span class="nt">&lt;option&gt;</span>Logs<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>        <span class="nt">&lt;option&gt;</span>Backup<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/select&gt;&lt;/td&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;&lt;select&gt;</span>
</span><span class='line'>        <span class="nt">&lt;option&gt;&lt;/option&gt;</span>
</span><span class='line'>        <span class="nt">&lt;option&gt;</span>Read-Only<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>        <span class="nt">&lt;option&gt;</span>Read-Write<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>        <span class="nt">&lt;option&gt;</span>Read-Write-Delete<span class="nt">&lt;/option&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/select&gt;&lt;/td&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;&lt;input</span> <span class="na">type=</span><span class="s">&quot;checkbox&quot;</span> <span class="nt">/&gt;&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tbody&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tfoot&gt;</span>
</span><span class='line'>    <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>      <span class="nt">&lt;th</span> <span class="na">colspan=</span><span class="s">&quot;3&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;p</span> <span class="na">data-bind=</span><span class="s">&quot;if: empty()&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          Clique em Adicionar para conceder permissões.
</span><span class='line'>        <span class="nt">&lt;/p&gt;</span>
</span><span class='line'>        <span class="nt">&lt;button</span> <span class="na">data-bind=</span><span class="s">&quot;click: add&quot;</span><span class="nt">&gt;</span>Adicionar<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/th&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tfoot&gt;</span>
</span><span class='line'><span class="nt">&lt;/table&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<p>Os bindings são aplicados na chamada ko.applyBindings, que liga um ViewModel às declarações de bindings feitas em um elemento da página:</p>
<figure class='code'><figcaption><span>app/views/people/_form.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script&gt;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">view_model</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">PermissionListViewModel</span><span class="p">();</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">permissions_table</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;#permissions_table&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">ko</span><span class="p">.</span><span class="nx">applyBindings</span><span class="p">(</span><span class="nx">view_model</span><span class="p">,</span> <span class="nx">permissions_table</span><span class="p">);</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  Nas linhas 3 e 26, são declarados bindings condicionais:
  <ul>
    <li>binding <strong>ifnot</strong>: quando a lista de permissões NÃO estiver vazia, o cabeçalho da tabela é exibido.
    </li>
    <li>binding <strong>if</strong>: quando o método viewmodel.empty() retornar true, um parágrafo de instruções é exibido.</li>
  </ul>
  <center><img src="http://mindshare.blog.br/images/2012/09/25/02-lista-permissoes-vazia.png" /></center>
  Note que podem ser contruídos bindings tanto com expressões (mostrado no binding ifnot) e com métodos do viewmodel (mostrado no binding if).
</p>
<p>
  Na linha 6, é declarado um binding foreach: para cada elemento do array viewmodel.permissions, a view
  renderiza uma linha na tabela, segundo o template fornecido no corpo de tbody (elemento em que foi feito o binding).
</p>
<p>
  Na linha 29, é declarado um binding click: quando o botão for clicado, o método viewmodel.add é chamado.
  A view se atualiza automagicamente em resposta à adição de um elemento no array observável, omitindo as
  instruções iniciais (de quando o array está vazio) e adicionando campos na tabela, para cada adição realizada.
</p>
<center><img src="http://mindshare.blog.br/images/2012/09/25/03-adicionar-permissoes.png" /></center>
<h3>Bindings de Campos de Formulários</h3>
<p>O próximo passo é fazer o binding dos campos em cada linha da tabela.</p>
<h4>Remoção de elementos com checkboks e _destroy binding</h4>
<p>
  No <a href="http://mindshare.blog.br/blog/2012/08/06/multimodel-forms-parte-3-nested-forms" target="_blank">terceiro post</a> desta série,
  foi mostrado que o rails remove objetos de associações que possuam um atributo _destroy avaliado como true.
  <a href="http://knockoutjs.com/documentation/observableArrays.html" target="_blank">Influenciado por este comportamento do Rails</a>,
  o binding foreach omite automaticamente os objetos de um observable array quem tenham um atributo _destroy avaliado como true.
  Sabendo-se disso, basta adicionar um <strong>checked binding</strong> no checkbox:
</p>
<figure class='code'><figcaption><span>Checked binding com valor _destroy, para remoção de elementos da tabela</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;checkbox&quot;</span> <span class="na">data-bind=</span><span class="s">&quot;checked: _destroy&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<p>Também é necessário inicializar um atributo _destroy: false, em cada objeto adicionado ao array.</p>
<figure class='code'><figcaption><span>app/assets/javascripts/people.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">this</span><span class="p">.</span><span class="nx">add</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">permissions</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">_destroy</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  Ao clicar no checkbox de uma linha, ela é removida da tabela. Porém surge um comportamento anômalo: quando a tabela fica vazia,
  o cabeçalho da tabela continua sendo mostrado. O comportamento consistente seria omití-lo e voltar a exibir a instrução
  de quando o array está vazio.
</p>
<p>
  Isto ocorre pois os elementos não são efetivamente removidos do array - apenas ficam marcados com o atributo _destroy: true.
  É necessário reescrever o método empty: permissions não está vazia quando pelo menos um elemento no array avalia _destroy como false.
</p>
<figure class='code'><figcaption><span>Correção do método empty</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">this</span><span class="p">.</span><span class="nx">empty</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">permissions</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">permissions</span><span class="p">();</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">permissions</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">permissions</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">_destroy</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  Outra abordagem para a remoção de elementos é mantê-los visíveis na tabela, mas com um estilo indicando que foram marcados para
  remoção. Eu particularmente prefiro esta abordagem, pois dá a oportunidade para o usuário de desfazer uma remoção acidental.
  Para esta abordagem, deve-se reescrever o binding foreach, adicionando um atributo includeDestroyed.
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;tbody</span> <span class="na">data-bind=</span><span class="s">&quot;foreach: { data: permissions, includeDestroyed: true }&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<p>Para marcar as linhas removidas, pode-se utilizar um binding style:</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;tr</span> <span class="na">data-bind=</span><span class="s">&quot;style: { backgroundColor: _destroy ? &#39;salmon&#39; : &#39;white&#39; }&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  Ou, para não misturar estilos com markup, um binding css.
  A diferença é que este último adiciona uma classe ao elemento, caso a expressão de binding seja avaliada como verdadeira.
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;tr</span> <span class="na">data-bind=</span><span class="s">&quot;css: { removed_row: _destroy }&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<figure class='code'><figcaption><span>app/assets/stylesheets/people.css.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.removed_row</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="nb">salmon</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
<p>Notar que, na abordagem de manter visíveis os elementos destroyed, é necessário reverter a implementação inicial do método empty.</p>
<center><img src="http://mindshare.blog.br/images/2012/09/25/04-foreach-include-destroyed.png" /></center>
</div>

<h4>Binding de Select boxes</h4>
<p>
  Revendo a listagem do formulário, pode-se perceber que os campos de select já são bastante verbosos, mesmo com um número pequeno de opções.
  Podemos usar o binding options para deixar o código mais limpo:
</p>
<figure class='code'><figcaption><span>app/views/people/_form.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;table</span> <span class="na">id=</span><span class="s">&quot;permissions_table&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;caption&gt;</span>Permissões<span class="nt">&lt;/caption&gt;</span>
</span><span class='line'>  <span class="nt">&lt;thead</span> <span class="na">date-bind=</span><span class="s">&quot;ifnot: permissions().length == 0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;tr&gt;&lt;th&gt;</span>Áreas<span class="nt">&lt;/th&gt;&lt;th&gt;</span>Acessos<span class="nt">&lt;/th&gt;&lt;th&gt;</span>Remover<span class="nt">&lt;/th&gt;&lt;/tr&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/thead&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tbody</span> <span class="na">data-bind=</span><span class="s">&quot;foreach: { data: permissions, includeDestroyed: true }&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;tr</span> <span class="na">data-bind=</span><span class="s">&quot;css: { removed_row: _destroy }&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;&lt;select</span> <span class="na">data-bind=</span><span class="s">&quot;options: $root.areas, optionsCaption: &#39;Choose...&#39;&quot;</span><span class="nt">&gt;&lt;/select&gt;&lt;/td&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;&lt;select</span> <span class="na">data-bind=</span><span class="s">&quot;options: $root.grants, optionsCaption: &#39;Choose...&#39;,</span>
</span><span class='line'><span class="s">          optionsText: &#39;grant&#39;, optionsValue: &#39;value&#39;&quot;</span><span class="nt">&gt;&lt;/select&gt;&lt;/td&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;&lt;input</span> <span class="na">type=</span><span class="s">&quot;checkbox&quot;</span> <span class="na">data-bind=</span><span class="s">&quot;checked: _destroy&quot;</span> <span class="nt">/&gt;&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tbody&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tfoot&gt;</span>
</span><span class='line'>    <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>      <span class="nt">&lt;th</span> <span class="na">colspan=</span><span class="s">&quot;3&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;p</span> <span class="na">data-bind=</span><span class="s">&quot;if: empty()&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          Clique em Adicionar para conceder permissões.
</span><span class='line'>        <span class="nt">&lt;/p&gt;</span>
</span><span class='line'>        <span class="nt">&lt;button</span> <span class="na">data-bind=</span><span class="s">&quot;click: add&quot;</span><span class="nt">&gt;</span>Adicionar<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/th&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tfoot&gt;</span>
</span><span class='line'><span class="nt">&lt;/table&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<p>Movendo as opções para PermissionsListViewModel:</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">PermissionListViewModel</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">permissions</span> <span class="o">=</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">observableArray</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">areas</span> <span class="o">=</span> <span class="p">[</span> <span class="s2">&quot;admin&quot;</span><span class="p">,</span> <span class="s2">&quot;backups&quot;</span><span class="p">,</span> <span class="s2">&quot;logs&quot;</span> <span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">grants</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>  <span class="nx">grant</span><span class="o">:</span> <span class="s2">&quot;Read-Only&quot;</span><span class="p">,</span> <span class="nx">value</span><span class="o">:</span> <span class="s2">&quot;R&quot;</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span>  <span class="nx">grant</span><span class="o">:</span> <span class="s2">&quot;Read-Write&quot;</span><span class="p">,</span> <span class="nx">value</span><span class="o">:</span> <span class="s2">&quot;RW&quot;</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span>  <span class="nx">grant</span><span class="o">:</span> <span class="s2">&quot;Read-Write-Delete&quot;</span><span class="p">,</span> <span class="nx">value</span><span class="o">:</span> <span class="s2">&quot;RWD&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="p">];</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  Note que as opções podem ser representadas por um array (neste caso, o valor do select box é o próprio texto de cada opção), ou por um hash
  (o binding deve possuir em optionsText e optionsValue as chaves do hash usadas para resolver o texto e o valor de cada opção do select box).
  O binding optionsCaption serve para adicionar uma opção default para quando nenhuma opção não estiver selecionada.
</p>
<center><img src="http://mindshare.blog.br/images/2012/09/25/05-option-binding.png" /></center>
<p>O formulário interativo de permissões já adquiriu sua aparência final, estando no ponto para testar a integração com a aplicação.</p>
<h4>Nomeando os campos</h4>
<p>
  Para que os valores possam ser submetidos, é necessário dar nomes aos campos. No terceiro artigo da série, foi mostrado que a nomenclatura dos
  campos deve obedecer uma notação especial, cuja construção é de responsabilidade dos FormBuilders. Com o truque abaixo, é possível continuar
  tirando proveito dos builders nativos:
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= acc.fields_for :permissions, [Permission.new] do |p| %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="nb">p</span><span class="o">.</span><span class="n">object_name</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= base_name = p.object_name[0..-4] %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<center><img src="http://mindshare.blog.br/images/2012/09/25/06-capture-field-name.png" /></center>
<p>
  Ou seja, conseguimos obter o nome-base dos campos, removendo os caracteres &#8220;[0]&#8221; do nome gerado pelo FormBuilder.
  Todas as vezes que for adicionada uma nova permissão, este nome-base deve ser sufixado de um índice incrementado.
  O knockout atribuirá o nome do campo via um binding do tipo attr. O formulário fica reescrito por:
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">tbody</span> <span class="n">data</span><span class="o">-</span><span class="n">bind</span><span class="o">=</span><span class="s2">&quot;foreach: { data: permissions, includeDestroyed: true }&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">tr</span> <span class="n">data</span><span class="o">-</span><span class="n">bind</span><span class="o">=</span><span class="s2">&quot;css: { removed_row: _destroy }&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">%= acc.fields_for :permissions, [Permission.new] do |p| %&gt;</span>
</span><span class='line'><span class="sx">      &lt;% base =</span> <span class="nb">p</span><span class="o">.</span><span class="n">object_name</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">4</span><span class="o">]</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">      &lt;td&gt;</span><span class="o">&lt;</span><span class="nb">select</span> <span class="n">data</span><span class="o">-</span><span class="n">bind</span><span class="o">=</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">          attr: { name: &#39;&lt;%= base %&gt;[&#39; + index + &#39;][restricted_area]&#39; },</span>
</span><span class='line'><span class="s2">          options: $root.areas, optionsCaption: &#39;Choose...&#39;&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/select&gt;&lt;/</span><span class="n">td</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="nb">select</span> <span class="n">data</span><span class="o">-</span><span class="n">bind</span><span class="o">=</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">          attr: { name: &#39;&lt;%= base %&gt;[&#39; + index + &#39;][grants]&#39; },</span>
</span><span class='line'><span class="s2">          options: $root.grants, optionsCaption: &#39;Choose...&#39;,</span>
</span><span class='line'><span class="s2">          optionsText: &#39;grant&#39;, optionsValue: &#39;value&#39;&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/select&gt;&lt;/</span><span class="n">td</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="n">input</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;checkbox&quot;</span> <span class="n">data</span><span class="o">-</span><span class="n">bind</span><span class="o">=</span><span class="s2">&quot;checked: _destroy,</span>
</span><span class='line'><span class="s2">          attr: { name: &#39;&lt;%= base %&gt;[&#39; + index + &#39;][_destroy]&#39; }&quot;</span> <span class="sr">/&gt;&lt;/</span><span class="n">td</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">  &lt;/tr&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/tbody&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<p>E apenas uma pequena modificação é necessária no view model, para gerar índices ao adicionar novos elementos:</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">this</span><span class="p">.</span><span class="nx">add</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">new_index</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">permissions</span><span class="p">().</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">permissions</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">index</span><span class="o">:</span> <span class="nx">new_index</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">_destroy</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
<p>Neste ponto, o formulário está pronto para ser submetido!</p>
<h3>Exibir e editar associação</h3>
<p>Para poder editar um registro existente, porém, ainda falta inicializar a tabela de permissões com os dados salvos anteriormente.</p>
<center><img src="http://mindshare.blog.br/images/2012/09/25/07-load-permissions.png" /></center>
<p>
  Isto pode ser feito com os seguintes passos:
  <ol>
    <li>Gerar JSON de permissões e injetar no view model</li>
    <li>Utilizar plugin knockout.mapping para obter representações observáveis das permissões</li>
    <li>Adicionar atributos index e _destroy para compatibilizar com os bindings dos campos</li>
    <li>Declarar value bindings, para inicializar campos com os valores salvos anteriormente</li>
  </ol>
</p>
<figure class='code'><figcaption><span>Passo 1 em _form.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">current_permissions</span> <span class="o">=</span> <span class="o">&lt;%=</span> <span class="err">@</span><span class="nx">person</span><span class="p">.</span><span class="nx">user_account</span><span class="p">.</span><span class="nx">permissions</span><span class="p">.</span><span class="nx">to_json</span><span class="p">.</span><span class="nx">html_safe</span> <span class="o">%&gt;</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">view_model</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">PermissionListViewModel</span><span class="p">(</span><span class="nx">current_permissions</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">permissions_table</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;#permissions_table&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">ko</span><span class="p">.</span><span class="nx">applyBindings</span><span class="p">(</span><span class="nx">view_model</span><span class="p">,</span> <span class="nx">permissions_table</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span>Passos 2 e 3 em people.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">PermissionListViewModel</span><span class="p">(</span><span class="nx">permissions</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">permissions</span> <span class="o">=</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">mapping</span><span class="p">.</span><span class="nx">fromJS</span><span class="p">(</span><span class="nx">permissions</span><span class="p">);</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">permissions</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">p</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">permissions</span><span class="p">()[</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'>    <span class="nx">p</span><span class="p">.</span><span class="nx">_destroy</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">p</span><span class="p">.</span><span class="nx">index</span> <span class="o">=</span> <span class="nx">i</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span>Passo 4: Value bindings em _form.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= acc.fields_for :permissions, [Permission.new] do |p| %&gt;</span>
</span><span class='line'><span class="sx">  &lt;% base =</span> <span class="nb">p</span><span class="o">.</span><span class="n">object_name</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">4</span><span class="o">]</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;input type=&quot;hidden&quot; data-bind=&quot;value: id,</span>
</span><span class='line'><span class="sx">      attr: { name: &#39;&lt;%= base %&gt;</span><span class="o">[</span><span class="s1">&#39; + index + &#39;</span><span class="o">][</span><span class="nb">id</span><span class="o">]</span><span class="s1">&#39;&quot; /&gt;</span>
</span><span class='line'><span class="s1">  &lt;td&gt;&lt;select data-bind=&quot;value: restricted_area,</span>
</span><span class='line'><span class="s1">      attr: { name: &#39;</span><span class="o">&lt;</span><span class="sx">%= base %&gt;[&#39; + index + &#39;][restricted_area]&#39; },</span>
</span><span class='line'><span class="sx">      options: $root.areas, optionsCaption: &#39;Choose...&#39;&quot;&gt;&lt;/select&gt;&lt;/td&gt;</span>
</span><span class='line'><span class="sx">  &lt;td&gt;&lt;select data-bind=</span><span class="s2">&quot;value: grants,</span>
</span><span class='line'><span class="s2">      attr: { name: &#39;&lt;%= base %&gt;[&#39; + index + &#39;][grants]&#39; },</span>
</span><span class='line'><span class="s2">      options: $root.grants, optionsCaption: &#39;Choose...&#39;,</span>
</span><span class='line'><span class="s2">      optionsText: &#39;grant&#39;, optionsValue: &#39;value&#39;&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/select&gt;&lt;/</span><span class="n">td</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="n">input</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;checkbox&quot;</span> <span class="n">data</span><span class="o">-</span><span class="n">bind</span><span class="o">=</span><span class="s2">&quot;checked: _destroy,</span>
</span><span class='line'><span class="s2">      attr: { name: &#39;&lt;%= base %&gt;[&#39; + index + &#39;][_destroy]&#39; }&quot;</span> <span class="sr">/&gt;&lt;/</span><span class="n">td</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  Também é necessário inicializar os values bindings em view_model.add,
  para que o Knockout possa realizar os value bindings ao clicar no botão:
</p>
<figure class='code'><figcaption><span>Inicialização dos value bindings na adição de permissões</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">this</span><span class="p">.</span><span class="nx">add</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">new_index</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">permissions</span><span class="p">().</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">permissions</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">id</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">restricted_area</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">grants</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">index</span><span class="o">:</span> <span class="nx">new_index</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">_destroy</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
<p>E assim, concluímos esta série de posts:<p>
<center><img src="http://mindshare.blog.br/images/2012/09/25/08-working-app.png" /></center>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MultiModel forms, parte 3: Nested Forms]]></title>
    <link href="http://mindshare.blog.br/blog/2012/08/06/multimodel-forms-parte-3-nested-forms/"/>
    <updated>2012-08-06T00:00:00-03:00</updated>
    <id>http://mindshare.blog.br/blog/2012/08/06/multimodel-forms-parte-3-nested-forms</id>
    <content type="html"><![CDATA[<div class='post'>
Nos dois primeiros posts desta série, foi mostrado o poder do uso de Nested Models.
O Rails fornece também view helpers para a construção de views com este recurso.
<!-- more -->
Seguem os links dos posts anteriores:
<ul>
  <li><a href="http://mindshare.blog.br/blog/2012/08/01/um-formulario-multiplos-modelos" target="_blank">Parte 1: Nested Models - One-to-One</a></li>
  <li><a href="http://mindshare.blog.br/blog/2012/08/05/multimodel-forms-parte-2-one-to-many" target="_blank">Parte 2: Nested Models - One-to-Many</a></li>
  <li><a href="http://mindshare.blog.br/blog/2012/08/06/multimodel-forms-parte-3-nested-forms" target="_blank">Parte 3: Nested Forms</a></li>
  <li><a href="http://mindshare.blog.br/blog/2012/09/25/multimodel-forms-parte-4-nested-forms-usando-knockout-js"
      target="_blank">Parte 4: Nested Forms interativos usando Knockout.js</a></li>
</ul>
O código desta aplicação de exemplo está disponível neste <a href="https://github.com/fabiolnm/Multi-Model-Forms">repositório Github</a>.


<h2>Nested Forms</h2>
Os view helpers do rails são capazes de gerar markup especial, aderente à notação dos nested models.
Veja como pode ser reescrito o formulário (criado no passo de scaffold no primeiro post desta série):
<figure class='code'><figcaption><span>app/views/people/_form.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= form_for(@person) do |f| %&gt;</span>
</span><span class='line'><span class="sx">  &lt;div class=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">%= f.label :name %&gt;&lt;br /&gt;</span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:name</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= f.fields_for :user_account do |acc| %&gt;</span>
</span><span class='line'><span class="sx">    &lt;div class=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="sx">%= acc.label :username %&gt;&lt;br /&gt;</span>
</span><span class='line'><span class="sx">      &lt;%=</span> <span class="n">acc</span><span class="o">.</span><span class="n">text_field</span> <span class="ss">:username</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;/div&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="sx">%= acc.label :password %&gt;&lt;br /&gt;</span>
</span><span class='line'><span class="sx">      &lt;%=</span> <span class="n">acc</span><span class="o">.</span><span class="n">password_field</span> <span class="ss">:password</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">%= acc.fields_for :permissions do |p| %&gt;</span>
</span><span class='line'><span class="sx">      &lt;div class=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="sx">%= p.label p.object.restricted_area %&gt;</span>
</span><span class='line'><span class="sx">        &lt;%=</span> <span class="nb">p</span><span class="o">.</span><span class="n">hidden_field</span> <span class="ss">:restricted_area</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">        &lt;%= p.select :grants,</span>
</span><span class='line'><span class="sx">          [ &quot;Read-Only&quot;, &quot;Read-Write&quot;, &quot;Read-Write-Delete&quot; ],</span>
</span><span class='line'><span class="sx">          include_blank: true %&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">    &lt;% end %&gt;</span>
</span><span class='line'><span class="sr">  &lt;% end %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  &lt;div class=&quot;actions&quot;&gt;</span>
</span><span class='line'><span class="sr">    &lt;%= f.submit %&gt;</span>
</span><span class='line'><span class="sr">  &lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<p>Entre na tela de cadastro (http://localhost:3000/people/new), para visualizar um formulário contendo os campos de Person, UserAccount e Permission:</p>

<center><img src="http://mindshare.blog.br/images/2012/08/06/new_person.png" /></center>

<p>Oops. Apenas os campos de Person estão visíveis. Não é difícil conjecturar o porquê. Ao criar um novo objeto Person, ele não possui um user_account, como pode ser confirmado no console:</p>

<figure class='code'><figcaption><span>Inspecionando a conta de usuário de uma Pessoa no rails console</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Person</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">user_account</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span></code></pre></td></tr></table></div></figure>

É necessário sobrescrever o método Person/user_account, para que retorne um novo objeto quando Person não tiver uma conta de usuário associada:
<figure class='code'><figcaption><span>app/models/person.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">user_account</span>
</span><span class='line'>  <span class="vi">@user_account</span> <span class="o">=</span> <span class="k">super</span>
</span><span class='line'>  <span class="vi">@user_account</span> <span class="o">=</span> <span class="n">build_user_account</span> <span class="k">if</span> <span class="vi">@user_account</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>  <span class="vi">@user_account</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>
  <p>Isto é suficiente para habilitar os campos de UserAccount:</p>

  <center><img src="http://mindshare.blog.br/images/2012/08/06/user_account.png" /></center>

  <p>Para exibir os campos referentes aos atributos de Permission, criamos um método UserAccount/permissions_types, que pré-instancia as possíveis opções:</p>
<figure class='code'><figcaption><span>app/models/user_account.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">permissions_types</span>
</span><span class='line'>  <span class="nb">hash</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>  <span class="n">permissions</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="nb">p</span><span class="o">|</span> <span class="nb">hash</span><span class="o">[</span><span class="nb">p</span><span class="o">.</span><span class="n">restricted_area</span><span class="o">]</span> <span class="o">=</span> <span class="nb">p</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">[</span> <span class="s2">&quot;admin&quot;</span><span class="p">,</span> <span class="s2">&quot;backups&quot;</span><span class="p">,</span> <span class="s2">&quot;logs&quot;</span> <span class="o">].</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">area</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">hash</span><span class="o">[</span><span class="n">area</span><span class="o">]</span> <span class="o">=</span> <span class="no">Permission</span><span class="o">.</span><span class="n">new</span> <span class="n">restricted_area</span><span class="p">:</span> <span class="n">area</span> <span class="k">unless</span> <span class="nb">hash</span><span class="o">.</span><span class="n">has_key?</span> <span class="n">area</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nb">hash</span><span class="o">.</span><span class="n">values</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

  <p>Note que as duas primeiras linhas &#8220;memorizam&#8221; associações previamente salvas,
    enquanto nas linhas seguintes, são construídos novos objetos apenas para as associações que ainda não estiverem presentes.</p>
  <p>É necessário modificar o formulário para construir os campos de permissões utilizando este método:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= acc.fields_for :permissions, acc.object.permissions_types do |p| %&gt;</span>
</span><span class='line'><span class="sx">  &lt;div class=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">%= p.label p.object.restricted_area %&gt;</span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="nb">p</span><span class="o">.</span><span class="n">hidden_field</span> <span class="ss">:restricted_area</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;%= p.select :grants, [ &quot;Read-Only&quot;, &quot;Read-Write&quot;, &quot;Read-Write-Delete&quot; ], include_blank: true %&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>

  <p>Vejamos como ficou:</p>
  <center><img src="http://mindshare.blog.br/images/2012/08/06/permissions.png" /></center>

  <p>Agora que os campos já estão presentes no formulário, basta salvar um registro:</p>
  <center><img src="http://mindshare.blog.br/images/2012/08/06/validation.png" /></center>

  <p>
    Oops&#8230; estamos quase lá&#8230; Vamos tentar entender o que aconteceu.
    Com auxílio do Chrome Developer Tools, podemos analisar os dados que são submetidos com o formulário:
  </p>

  <center><img src="http://mindshare.blog.br/images/2012/08/06/post_data.png" /></center>

Os view helpers do Rails criam campos com nomes que são adequados à sua forma de processar nested models. Se analisarmos o log do controller, vemos que o request foi convertido para um hash, representando estes parâmetros de forma hierárquica (formatei o log para facilitar sua visualização):<br />
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Started</span> <span class="no">POST</span> <span class="s2">&quot;/people&quot;</span> <span class="k">for</span> <span class="mi">127</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span> <span class="n">at</span> <span class="mi">2012</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mo">05</span> <span class="mi">22</span><span class="p">:</span><span class="mi">36</span><span class="p">:</span><span class="mi">11</span> <span class="o">-</span><span class="mo">0300</span>
</span><span class='line'><span class="no">Connecting</span> <span class="n">to</span> <span class="n">database</span> <span class="n">specified</span> <span class="n">by</span> <span class="n">database</span><span class="o">.</span><span class="n">yml</span>
</span><span class='line'><span class="no">Processing</span> <span class="n">by</span> <span class="no">PeopleController</span><span class="c1">#create as HTML</span>
</span><span class='line'><span class="no">Parameters</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;utf8&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;✓&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;authenticity_token&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;iTFVyyIwp0w2apXT02s+XN3z6PfOFEuUgZRaZWxPegU=&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;person&quot;</span><span class="o">=&gt;</span><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;name&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;José da Silva&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;user_account_attributes&quot;</span><span class="o">=&gt;</span><span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;username&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;jsilva&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;password&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;[FILTERED]&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;permissions_attributes&quot;</span><span class="o">=&gt;</span><span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;0&quot;</span><span class="o">=&gt;</span><span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;restricted_area&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;admin&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;grants&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;Read-Only&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s2">&quot;1&quot;</span><span class="o">=&gt;</span><span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;restricted_area&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;backups&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;grants&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s2">&quot;2&quot;</span><span class="o">=&gt;</span><span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;restricted_area&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;logs&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;grants&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;Read-Write&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s2">&quot;commit&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;Create Person&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
Faz sentido: o rails tentou criar uma permission com o campo grants em branco, mas este campo é obrigatório (vide a parte 2 desta série). É necessário alguma forma de filtrar de permission_attributes os valores que estiverem com grants em branco. Há: Rails possui essa facilidade:<br />
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">accepts_nested_attributes_for</span> <span class="ss">:permissions</span><span class="p">,</span> <span class="n">allow_destroy</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>  <span class="n">reject_if</span><span class="p">:</span> <span class="nb">proc</span> <span class="p">{</span> <span class="o">|</span><span class="n">attrs</span><span class="o">|</span>  <span class="n">attrs</span><span class="o">[</span><span class="s2">&quot;grants&quot;</span><span class="o">].</span><span class="n">blank?</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

  <p>Basta este pequeno ajuste em UserAccount para conseguimos salvar o registro, que na figura abaixo, foi reaberto para edição:</p>

  <center><img src="http://mindshare.blog.br/images/2012/08/06/edit_person.png" /></center>

  <p>
    É incrível: simplesmente funciona! Tudo bem até aqui, já conseguimos salvar.
    Mas logo descobrimos que o &#8220;brinquedo quebra&#8221; se tentar remover uma permissão: tente deixar Logs em branco e salvar.
    Parece que tudo deu certo, mas ao reabrir para edição, a permissão continua lá.
  </p>

  <p>
    Isto ocorre pois, após termos adicionado a cláusula reject_if, as permissões em branco passaram a ser rejeitadas.
    O Rails não tem mais a oportunidade de processá-las. Além disso, vimos nos posts anteriores que, para remover um nested model, é necessário passar
    <b style="color: blue;">_destroy: true</b> como um de seus parâmetros.
  </p>

  Pode-se usar um checkbox para adicionar um atributo _destroy:<br />
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= acc.fields_for :permissions, acc.object.permissions_types do |p| %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="nb">p</span><span class="o">.</span><span class="n">label</span> <span class="nb">p</span><span class="o">.</span><span class="n">object</span><span class="o">.</span><span class="n">restricted_area</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= p.hidden_field :restricted_area %&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= p.select :grants, [ &quot;Read-Only&quot;, &quot;Read-Write&quot;, &quot;Read-Write-Delete&quot; ], include_blank: true %&gt;</span>
</span><span class='line'><span class="sx">  &lt;b&gt;&lt;span style=</span><span class="s2">&quot;color: blue;&quot;</span><span class="o">&gt;&lt;</span><span class="sx">% unless </span><span class="nb">p</span><span class="o">.</span><span class="n">object</span><span class="o">.</span><span class="n">new_record?</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;%= p.check_box :_destroy %&gt;</span>
</span><span class='line'>    <span class="o">&lt;%=</span> <span class="nb">p</span><span class="o">.</span><span class="n">label</span> <span class="ss">:_destroy</span><span class="p">,</span> <span class="s1">&#39;Remove&#39;</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;% end %&gt;</span><span class="o">&lt;</span><span class="sr">/span&gt;&lt;/</span><span class="n">b</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>
  <p>O formulário fica com a seguinte aparência:</p>

  <center><img src="http://mindshare.blog.br/images/2012/08/06/destroy.png" /></center>

  <p>
    E agora, com auxílio do checkbox, conseguimos também remover permissões.
    Um único formulário, manipulando uma complexa estrutura de dados associados - Person 1 : 1 UserAccount 1 : N Permission.
  </p>

  <p>
    Note que não foi necessário adicionar nenhuma lógica no controller para interpretar argumentos do request dos objetos associados.
    Apesar de termos sido obrigados a adicionar um checkbox para remoção de permissões, não precisamos de nenhuma lógica customizada de
    data-binding para apresentar as associações na view. Tudo out-of-the-box, prontinho para usar, um bonus-track desta fantástica framework web que é o Rails!
  </p>

  <p>
    No quarto e último post desta série, será mostrada &#8220;a cereja do bolo&#8221;: com um pouquinho de JavaScript, jQuery e Knockout.js,
    tornaremos a adição de permissões mais dinâmica, além de adicionar dinamicamente o atributo _destroy no request, sem precisar de um checkbox.
  </p>

  <h3>Referências</h3>
  <ul>
    <li><a href="http://guides.rubyonrails.org/getting_started.html#building-a-multi-model-form"
        rel="nofollow" target="_blank">http://guides.rubyonrails.org/getting_started.html#building-a-multi-model-form</a></li>
    <li><a href="http://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html"
        rel="nofollow" target="_blank">http://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html</a></li>
    <li><a href="http://erikonrails.snowedin.net/?p=267" rel="nofollow" target="_blank">http://erikonrails.snowedin.net/?p=267</a></li>
    <li><a href="http://archives.ryandaigle.com/articles/2009/2/1/what-s-new-in-edge-rails-nested-attributes"
        rel="nofollow" target="_blank">http://archives.ryandaigle.com/articles/2009/2/1/what-s-new-in-edge-rails-nested-attributes</a></li>
    <li><a href="http://weblog.rubyonrails.org/2009/1/26/nested-model-forms/"
        rel="nofollow" target="_blank">http://weblog.rubyonrails.org/2009/1/26/nested-model-forms/</a></li>
  </ul>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MultiModel forms, parte 2: One-To-Many]]></title>
    <link href="http://mindshare.blog.br/blog/2012/08/05/multimodel-forms-parte-2-one-to-many/"/>
    <updated>2012-08-05T00:00:00-03:00</updated>
    <id>http://mindshare.blog.br/blog/2012/08/05/multimodel-forms-parte-2-one-to-many</id>
    <content type="html"><![CDATA[<div class='post'>
<!-- MORE -->
Este post é o segundo de uma série de quatro artigos:

<ul>
  <li><a href="http://mindshare.blog.br/blog/2012/08/01/um-formulario-multiplos-modelos" target="_blank">Parte 1: Nested Models - One-to-One</a></li>
  <li><a href="http://mindshare.blog.br/blog/2012/08/05/multimodel-forms-parte-2-one-to-many" target="_blank">Parte 2: Nested Models - One-to-Many</a></li>
  <li><a href="http://mindshare.blog.br/blog/2012/08/06/multimodel-forms-parte-3-nested-forms" target="_blank">Parte 3: Nested Forms</a></li>
  <li><a href="http://mindshare.blog.br/blog/2012/09/25/multimodel-forms-parte-4-nested-forms-usando-knockout-js"
      target="_blank">Parte 4: Nested Forms interativos usando Knockout.js</a></li>
</ul>
O código desta aplicação de exemplo está disponível neste <a href="https://github.com/fabiolnm/Multi-Model-Forms">repositório Github</a>.


<h2>Nested Models - One-to-Many</h2>
Segue o modelo utilizado neste tutorial:
<ul>
  <li><span style="color: #666666;">Person has one UserAccount (parte 1)</span></li>
  <li><span style="color: blue;"><b>UserAccount has many Permissions (parte 2)</b></span></li>
</ul>

Conforme estabelecido na parte 1 desta série, queremos editar UserAccount a partir do model Person. Nesta segunda parte,
veremos como editar também a partir do model Person a associação one-to-many UserAccount / Permissions. O modelo de permissões será bem simples:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Permission</span> <span class="n">user_account_id</span><span class="ss">:integer</span> <span class="n">restricted_area</span><span class="ss">:string</span> <span class="n">grants</span><span class="ss">:string</span>
</span><span class='line'><span class="n">rake</span> <span class="n">db</span><span class="ss">:migrate</span>
</span></code></pre></td></tr></table></div></figure>
<p>Por fim, resta configurar as validações e relacionamentos nos respectivos models.</p>

<h3>Nested One-to-Many</h3>
É necessário adicionar uma cláusula has_many em UserAccount, para que esta possa navegar na associação um-para-muitos.
Também é necessário configurar UserAccount para aceitar os atributos da associação Permission.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserAccount</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:username</span><span class="p">,</span> <span class="ss">:permissions_attributes</span>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:username</span><span class="p">,</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:person</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:person</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:permissions</span><span class="p">,</span> <span class="n">inverse_of</span><span class="p">:</span> <span class="ss">:user_account</span>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:permissions</span><span class="p">,</span> <span class="n">allow_destroy</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

Permission possui a chave estrangeira user_account_id (lado belongs_to).
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Permission</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:restricted_area</span>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:user_account</span><span class="p">,</span> <span class="ss">:restricted_area</span><span class="p">,</span> <span class="ss">:grants</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user_account</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

Façamos alguns testes no console do Rails:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">u</span> <span class="o">=</span> <span class="no">UserAccount</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="no">UserAccount</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;user_accounts&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;user_accounts&quot;</span> <span class="no">LIMIT</span> <span class="mi">1</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="c1">#&lt;UserAccount id: 1, person_id: 1, username: &quot;jsilva&quot;, password: &quot;abc123&quot;, created_at: &quot;2012-08-05 04:02:34&quot;, updated_at: &quot;2012-08-05 04:02:34&quot;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">u</span><span class="o">.</span><span class="n">update_attributes</span> <span class="n">permissions_attributes</span><span class="p">:</span> <span class="o">[</span> <span class="p">{</span> <span class="n">restricted_area</span><span class="p">:</span> <span class="ss">:admin</span><span class="p">,</span> <span class="n">grants</span><span class="p">:</span> <span class="s2">&quot;Read-Write&quot;</span> <span class="p">},</span> <span class="p">{</span> <span class="n">restricted_area</span><span class="p">:</span> <span class="ss">:backup</span><span class="p">,</span> <span class="n">grants</span><span class="p">:</span> <span class="s2">&quot;Read-Only&quot;</span> <span class="p">}</span> <span class="o">]</span>
</span><span class='line'> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span> <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'> <span class="no">Person</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;people&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;people&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;people&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="o">=</span> <span class="mi">1</span> <span class="no">LIMIT</span> <span class="mi">1</span>
</span><span class='line'> <span class="no">UserAccount</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;user_accounts&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;user_accounts&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;user_accounts&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="o">=</span> <span class="mi">1</span> <span class="no">LIMIT</span> <span class="mi">1</span>
</span><span class='line'> <span class="no">UserAccount</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;user_accounts&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;user_accounts&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;user_accounts&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="o">=</span> <span class="mi">1</span> <span class="no">LIMIT</span> <span class="mi">1</span>
</span><span class='line'> <span class="no">SQL</span> <span class="p">(</span><span class="mi">12</span><span class="o">.</span><span class="mi">6</span><span class="n">ms</span><span class="p">)</span> <span class="no">INSERT</span> <span class="no">INTO</span> <span class="s2">&quot;permissions&quot;</span> <span class="p">(</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="s2">&quot;restricted_area&quot;</span><span class="p">,</span> <span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="s2">&quot;user_account_id&quot;</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?)</span> <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="no">Sun</span><span class="p">,</span> <span class="mo">05</span> <span class="no">Aug</span> <span class="mi">2012</span> <span class="mo">04</span><span class="p">:</span><span class="mi">54</span><span class="p">:</span><span class="mi">31</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;grants&quot;</span><span class="p">,</span> <span class="s2">&quot;Read-Write&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;restricted_area&quot;</span><span class="p">,</span> <span class="ss">:admin</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="no">Sun</span><span class="p">,</span> <span class="mo">05</span> <span class="no">Aug</span> <span class="mi">2012</span> <span class="mo">04</span><span class="p">:</span><span class="mi">54</span><span class="p">:</span><span class="mi">31</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;user_account_id&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="o">]]</span>
</span><span class='line'> <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span> <span class="no">INSERT</span> <span class="no">INTO</span> <span class="s2">&quot;permissions&quot;</span> <span class="p">(</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="s2">&quot;restricted_area&quot;</span><span class="p">,</span> <span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="s2">&quot;user_account_id&quot;</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?)</span> <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="no">Sun</span><span class="p">,</span> <span class="mo">05</span> <span class="no">Aug</span> <span class="mi">2012</span> <span class="mo">04</span><span class="p">:</span><span class="mi">54</span><span class="p">:</span><span class="mi">31</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;grants&quot;</span><span class="p">,</span> <span class="s2">&quot;Read-Only&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;restricted_area&quot;</span><span class="p">,</span> <span class="ss">:backup</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="no">Sun</span><span class="p">,</span> <span class="mo">05</span> <span class="no">Aug</span> <span class="mi">2012</span> <span class="mo">04</span><span class="p">:</span><span class="mi">54</span><span class="p">:</span><span class="mi">31</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;user_account_id&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="o">]]</span>
</span><span class='line'> <span class="p">(</span><span class="mi">58</span><span class="o">.</span><span class="mi">7</span><span class="n">ms</span><span class="p">)</span> <span class="n">commit</span> <span class="n">transaction</span>
</span></code></pre></td></tr></table></div></figure>

No exemplo acima, permissões foram adicionadas a uma conta existente de usuário. É possível ir além: todos os dados de UserAccount e Permission podem ser diretamente manipulados um nível acima, numa chamada de Person:<br />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">create</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;João Oliveira&quot;</span><span class="p">,</span> <span class="n">user_account_attributes</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">username</span><span class="p">:</span> <span class="s2">&quot;joliv&quot;</span><span class="p">,</span> <span class="n">password</span><span class="p">:</span> <span class="s2">&quot;secret&quot;</span><span class="p">,</span> <span class="n">permissions_attributes</span><span class="p">:</span> <span class="o">[</span>
</span><span class='line'>    <span class="p">{</span> <span class="n">restricted_area</span><span class="p">:</span> <span class="s2">&quot;admin&quot;</span><span class="p">,</span> <span class="n">grants</span><span class="p">:</span> <span class="s2">&quot;Read-Write&quot;</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="n">restricted_area</span><span class="p">:</span> <span class="s2">&quot;backups&quot;</span><span class="p">,</span> <span class="n">grants</span><span class="p">:</span> <span class="s2">&quot;Read-Only&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span> <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="n">ms</span><span class="p">)</span> <span class="n">commit</span> <span class="n">transaction</span>
</span><span class='line'> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span> <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'> <span class="no">SQL</span> <span class="p">(</span><span class="mi">36</span><span class="o">.</span><span class="mi">8</span><span class="n">ms</span><span class="p">)</span> <span class="no">INSERT</span> <span class="no">INTO</span> <span class="s2">&quot;people&quot;</span> <span class="p">(</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;updated_at&quot;</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?)</span> <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="no">Sun</span><span class="p">,</span> <span class="mo">05</span> <span class="no">Aug</span> <span class="mi">2012</span> <span class="mo">05</span><span class="p">:</span><span class="mi">08</span><span class="p">:</span><span class="mi">31</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;João Oliveira&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="no">Sun</span><span class="p">,</span> <span class="mo">05</span> <span class="no">Aug</span> <span class="mi">2012</span> <span class="mo">05</span><span class="p">:</span><span class="mi">08</span><span class="p">:</span><span class="mi">31</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]]</span>
</span><span class='line'> <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">6</span><span class="n">ms</span><span class="p">)</span> <span class="no">INSERT</span> <span class="no">INTO</span> <span class="s2">&quot;user_accounts&quot;</span> <span class="p">(</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="s2">&quot;password&quot;</span><span class="p">,</span> <span class="s2">&quot;person_id&quot;</span><span class="p">,</span> <span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="s2">&quot;username&quot;</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?)</span> <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="no">Sun</span><span class="p">,</span> <span class="mo">05</span> <span class="no">Aug</span> <span class="mi">2012</span> <span class="mo">05</span><span class="p">:</span><span class="mi">08</span><span class="p">:</span><span class="mi">31</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="p">,</span> <span class="s2">&quot;secret&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;person_id&quot;</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="no">Sun</span><span class="p">,</span> <span class="mo">05</span> <span class="no">Aug</span> <span class="mi">2012</span> <span class="mo">05</span><span class="p">:</span><span class="mi">08</span><span class="p">:</span><span class="mi">31</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;username&quot;</span><span class="p">,</span> <span class="s2">&quot;joliv&quot;</span><span class="o">]]</span>
</span><span class='line'> <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span> <span class="no">INSERT</span> <span class="no">INTO</span> <span class="s2">&quot;permissions&quot;</span> <span class="p">(</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="s2">&quot;grants&quot;</span><span class="p">,</span> <span class="s2">&quot;restricted_area&quot;</span><span class="p">,</span> <span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="s2">&quot;user_account_id&quot;</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?)</span> <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="no">Sun</span><span class="p">,</span> <span class="mo">05</span> <span class="no">Aug</span> <span class="mi">2012</span> <span class="mo">05</span><span class="p">:</span><span class="mi">08</span><span class="p">:</span><span class="mi">31</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;grants&quot;</span><span class="p">,</span> <span class="s2">&quot;Read-Write&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;restricted_area&quot;</span><span class="p">,</span> <span class="s2">&quot;admin&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="no">Sun</span><span class="p">,</span> <span class="mo">05</span> <span class="no">Aug</span> <span class="mi">2012</span> <span class="mo">05</span><span class="p">:</span><span class="mi">08</span><span class="p">:</span><span class="mi">31</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;user_account_id&quot;</span><span class="p">,</span> <span class="mi">3</span><span class="o">]]</span>
</span><span class='line'> <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span> <span class="no">INSERT</span> <span class="no">INTO</span> <span class="s2">&quot;permissions&quot;</span> <span class="p">(</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="s2">&quot;grants&quot;</span><span class="p">,</span> <span class="s2">&quot;restricted_area&quot;</span><span class="p">,</span> <span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="s2">&quot;user_account_id&quot;</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?)</span> <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="no">Sun</span><span class="p">,</span> <span class="mo">05</span> <span class="no">Aug</span> <span class="mi">2012</span> <span class="mo">05</span><span class="p">:</span><span class="mi">08</span><span class="p">:</span><span class="mi">31</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;grants&quot;</span><span class="p">,</span> <span class="s2">&quot;Read-Only&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;restricted_area&quot;</span><span class="p">,</span> <span class="s2">&quot;backups&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="no">Sun</span><span class="p">,</span> <span class="mo">05</span> <span class="no">Aug</span> <span class="mi">2012</span> <span class="mo">05</span><span class="p">:</span><span class="mi">08</span><span class="p">:</span><span class="mi">31</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;user_account_id&quot;</span><span class="p">,</span> <span class="mi">3</span><span class="o">]]</span>
</span><span class='line'> <span class="p">(</span><span class="mi">71</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span> <span class="n">commit</span> <span class="n">transaction</span>
</span></code></pre></td></tr></table></div></figure>
  <p>
    Aprecie o poder deste recurso: uma simples linha de comando, e numa única transação são persistidos 4 objetos: Person, UserAccount e duas Permission. Não pára por aí.
    Este poder é ainda mais amplo, visto que Rails fornece helpers para construção de formulários com nested models - tema que será abordado na parte 3 desta série.
  </p>
  <h3>Referências</h3>
  <ul>
    <li><a href="http://guides.rubyonrails.org/getting_started.html#building-a-multi-model-form"
        rel="nofollow" target="_blank">http://guides.rubyonrails.org/getting_started.html#building-a-multi-model-form</a></li>
    <li><a href="http://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html"
        rel="nofollow" target="_blank">http://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html</a></li>
    <li><a href="http://erikonrails.snowedin.net/?p=267" rel="nofollow" target="_blank">http://erikonrails.snowedin.net/?p=267</a></li>
    <li><a href="http://archives.ryandaigle.com/articles/2009/2/1/what-s-new-in-edge-rails-nested-attributes"
        rel="nofollow" target="_blank">http://archives.ryandaigle.com/articles/2009/2/1/what-s-new-in-edge-rails-nested-attributes</a></li>
    <li><a href="http://weblog.rubyonrails.org/2009/1/26/nested-model-forms/"
        rel="nofollow" target="_blank">http://weblog.rubyonrails.org/2009/1/26/nested-model-forms/</a></li>
  </ul>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Um formulário, multiplos modelos: a praticidade dos MultiModel Forms]]></title>
    <link href="http://mindshare.blog.br/blog/2012/08/01/um-formulario-multiplos-modelos/"/>
    <updated>2012-08-01T00:00:00-03:00</updated>
    <id>http://mindshare.blog.br/blog/2012/08/01/um-formulario-multiplos-modelos</id>
    <content type="html"><![CDATA[<div class='post'>
  MultiModel forms são um poderoso recurso oferecido pelo Rails desde a <a href="http://guides.rubyonrails.org/2_3_release_notes.html#nested-object-forms" rel="nofollow" target="_blank">versão 2.3</a> - porém desconhecido de muitos programadores. Com eles, é possível editar complexas hierarquias de objetos numa única view. É uma situação que nos deparamos com bastante freqüência:<br />
<!-- MORE -->
  <ul>
    <li>Editar Carrinho de Compras e Itens do Carrinho</li>
    <li>Dados de uma Pessoa e Informações de Contato</li>
    <li>Dados de um Usuário e Permissões.</li>
    <li>Post num blog e suas Tags.</li>
  </ul>
  e por aí vai. Este post é o primeiro de uma série de quatro artigos, para ilustrar a utilização destes recursos:

  <ul>
  <li><a href="http://mindshare.blog.br/blog/2012/08/01/um-formulario-multiplos-modelos" target="_blank">Parte 1: Nested Models - One-to-One</a></li>
  <li><a href="http://mindshare.blog.br/blog/2012/08/05/multimodel-forms-parte-2-one-to-many" target="_blank">Parte 2: Nested Models - One-to-Many</a></li>
  <li><a href="http://mindshare.blog.br/blog/2012/08/06/multimodel-forms-parte-3-nested-forms" target="_blank">Parte 3: Nested Forms</a></li>
  <li><a href="http://mindshare.blog.br/blog/2012/09/25/multimodel-forms-parte-4-nested-forms-usando-knockout-js"
      target="_blank">Parte 4: Nested Forms interativos usando Knockout.js</a></li>
</ul>
O código desta aplicação de exemplo está disponível neste <a href="https://github.com/fabiolnm/Multi-Model-Forms">repositório Github</a>.


  <h2>Nested Models - One-to-One</h2>
  Segue o modelo utilizado neste tutorial:
  <ul>
    <li><b><span style="color: blue;">Person has one UserAccount</span></b></li>
    <li><span style="color: #666666;">UserAccount has many Permissions (parte 2)</span></li>
  </ul>
  Em nome da simplicidade, Person será criado via scaffolding:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">scaffold</span> <span class="no">Person</span> <span class="nb">name</span><span class="ss">:string</span>
</span></code></pre></td></tr></table></div></figure>
  Neste ponto, pode-se rodar as migrations e iniciar o servidor de desenvolvimento:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="n">db</span><span class="ss">:migrate</span>
</span><span class='line'><span class="n">rails</span> <span class="n">s</span>
</span></code></pre></td></tr></table></div></figure>
  <p>E já estará disponível a tela - bastante rudimentar - para a edição de Person no localhost: http://localhost:3000/people.</p>

  <p>Como queremos editar UserAccount a partir do model Person, dispensaremos scaffold, sendo necessário criar o respectivo modelo:</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">UserAccount</span> <span class="n">person_id</span><span class="ss">:integer</span> <span class="n">username</span><span class="ss">:string</span> <span class="n">password</span><span class="ss">:string</span>
</span><span class='line'><span class="n">rake</span> <span class="n">db</span><span class="ss">:migrate</span>
</span></code></pre></td></tr></table></div></figure>
  <p>Por fim, resta configurar as validações e relacionamentos nos respectivos models.</p>

  <h3>Nested One-to-One</h3>
  A relação entre os modelos Person e UserAccount é de um-para-um, sendo que UserAccount possui a chave estrangeira person_id (lado belongs_to):
<figure class='code'><figcaption><span>app/models/person.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:name</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">has_one</span> <span class="ss">:user_account</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span>app/models/user_account.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserAccount</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:username</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:username</span><span class="p">,</span> <span class="ss">:password</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:person</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

Podemos usar o rails console para um teste inicial:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">c</span>
</span><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">create</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;José da Silva&quot;</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'><span class="no">SQL</span> <span class="p">(</span><span class="mi">16</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span> <span class="no">INSERT</span> <span class="no">INTO</span> <span class="s2">&quot;people&quot;</span> <span class="p">(</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;updated_at&quot;</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?)</span>  <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="no">Tue</span><span class="p">,</span> <span class="mi">31</span> <span class="no">Jul</span> <span class="mi">2012</span> <span class="mo">05</span><span class="p">:</span><span class="mi">57</span><span class="p">:</span><span class="mi">41</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;José da Silva&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="no">Tue</span><span class="p">,</span> <span class="mi">31</span> <span class="no">Jul</span> <span class="mi">2012</span> <span class="mo">05</span><span class="p">:</span><span class="mi">57</span><span class="p">:</span><span class="mi">41</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]]</span>
</span><span class='line'><span class="p">(</span><span class="mi">59</span><span class="o">.</span><span class="mi">6</span><span class="n">ms</span><span class="p">)</span>  <span class="n">commit</span> <span class="n">transaction</span>
</span></code></pre></td></tr></table></div></figure>
No exemplo acima, foi criado um objeto Person, passando para o método create um hash contendo apenas o atributo name.

O uso de nested models possibilita que a chamada create receba também os atributos username e password, para criar uma UserAccount simultaneamente ao objeto Person.<br />
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:user_account_attributes</span>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:name</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">has_one</span> <span class="ss">:user_account</span>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:user_account</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

Note que é necessário tornar esses atributos acessíveis via mass-assignment, na lista <b><span style="color: orange;">attr_accessible</span></b>.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">create</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;José da Silva&quot;</span><span class="p">,</span> <span class="n">user_account_attributes</span><span class="p">:</span> <span class="p">{</span> <span class="n">username</span><span class="p">:</span> <span class="s2">&quot;jsilva&quot;</span><span class="p">,</span> <span class="n">password</span><span class="p">:</span> <span class="s2">&quot;abc123&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="n">commit</span> <span class="n">transaction</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="n">ms</span><span class="p">)</span>  <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'><span class="no">SQL</span> <span class="p">(</span><span class="mi">6</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="no">INSERT</span> <span class="no">INTO</span> <span class="s2">&quot;people&quot;</span> <span class="p">(</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;updated_at&quot;</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?)</span>  <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="no">Tue</span><span class="p">,</span> <span class="mi">31</span> <span class="no">Jul</span> <span class="mi">2012</span> <span class="mo">06</span><span class="p">:</span><span class="mi">23</span><span class="p">:</span><span class="mi">26</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;José da Silva&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="no">Tue</span><span class="p">,</span> <span class="mi">31</span> <span class="no">Jul</span> <span class="mi">2012</span> <span class="mo">06</span><span class="p">:</span><span class="mi">23</span><span class="p">:</span><span class="mi">26</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]]</span>
</span><span class='line'><span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span>  <span class="no">INSERT</span> <span class="no">INTO</span> <span class="s2">&quot;user_accounts&quot;</span> <span class="p">(</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="s2">&quot;password&quot;</span><span class="p">,</span> <span class="s2">&quot;person_id&quot;</span><span class="p">,</span> <span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="s2">&quot;username&quot;</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?)</span>  <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="no">Tue</span><span class="p">,</span> <span class="mi">31</span> <span class="no">Jul</span> <span class="mi">2012</span> <span class="mo">06</span><span class="p">:</span><span class="mi">23</span><span class="p">:</span><span class="mi">26</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="p">,</span> <span class="s2">&quot;abc123&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;person_id&quot;</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="no">Tue</span><span class="p">,</span> <span class="mi">31</span> <span class="no">Jul</span> <span class="mi">2012</span> <span class="mo">06</span><span class="p">:</span><span class="mi">23</span><span class="p">:</span><span class="mi">26</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;username&quot;</span><span class="p">,</span> <span class="s2">&quot;jsilva&quot;</span><span class="o">]]</span>
</span><span class='line'><span class="p">(</span><span class="mi">56</span><span class="o">.</span><span class="mi">6</span><span class="n">ms</span><span class="p">)</span>  <span class="n">commit</span> <span class="n">transaction</span>
</span></code></pre></td></tr></table></div></figure>
<h3>Validação</h3>
O leitor mais atento pode ter notado que UserAccount não está validando a presença de Person. Isto deixa uma brecha no código, por permitir a criação de uma UserAccount desassociada de uma pessoa:<br />
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">UserAccount</span><span class="o">.</span><span class="n">create</span> <span class="n">username</span><span class="p">:</span> <span class="s2">&quot;joao&quot;</span><span class="p">,</span> <span class="n">password</span><span class="p">:</span> <span class="s2">&quot;abc123&quot;</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span>  <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'><span class="no">SQL</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span>  <span class="no">INSERT</span> <span class="no">INTO</span> <span class="s2">&quot;user_accounts&quot;</span> <span class="p">(</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="s2">&quot;password&quot;</span><span class="p">,</span> <span class="s2">&quot;person_id&quot;</span><span class="p">,</span> <span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="s2">&quot;username&quot;</span><span class="p">)</span> <span class="no">VALUES</span> <span class="p">(</span><span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?,</span> <span class="sc">?)</span>  <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="no">Tue</span><span class="p">,</span> <span class="mi">31</span> <span class="no">Jul</span> <span class="mi">2012</span> <span class="mo">06</span><span class="p">:</span><span class="mi">25</span><span class="p">:</span><span class="mi">34</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="p">,</span> <span class="s2">&quot;abc123&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;person_id&quot;</span><span class="p">,</span> <span class="kp">nil</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="no">Tue</span><span class="p">,</span> <span class="mi">31</span> <span class="no">Jul</span> <span class="mi">2012</span> <span class="mo">06</span><span class="p">:</span><span class="mi">25</span><span class="p">:</span><span class="mi">34</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;username&quot;</span><span class="p">,</span> <span class="s2">&quot;joao&quot;</span><span class="o">]]&lt;</span><span class="n">br</span> <span class="sr">/&gt;</span>
</span><span class='line'><span class="sr">(33.3ms)  commit transaction</span>
</span></code></pre></td></tr></table></div></figure>
  Porém isto não faz sentido no nosso modelo. Façamos a correção:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserAccount</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:username</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:person</span><span class="p">,</span> <span class="ss">:username</span><span class="p">,</span> <span class="ss">:password</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:person</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>
Agora UserAccount passa se comportar conforme esperado:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">u</span> <span class="o">=</span> <span class="no">UserAccount</span><span class="o">.</span><span class="n">create</span> <span class="n">username</span><span class="p">:</span> <span class="s2">&quot;a&quot;</span><span class="p">,</span> <span class="n">password</span><span class="p">:</span> <span class="s2">&quot;b&quot;</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span>  <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="n">rollback</span> <span class="n">transaction</span>
</span><span class='line'>
</span><span class='line'><span class="n">u</span><span class="o">.</span><span class="n">errors</span><span class="o">.</span><span class="n">messages</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:person</span><span class="o">=&gt;[</span><span class="s2">&quot;can&#39;t be blank&quot;</span><span class="o">]</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
Porém, isto tem um efeito colateral: ela afeta a criação da user_account via nested attributes de Person:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">create</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;José da Silva&quot;</span><span class="p">,</span> <span class="n">user_account_attributes</span><span class="p">:</span> <span class="p">{</span> <span class="n">username</span><span class="p">:</span> <span class="s2">&quot;jsilva&quot;</span><span class="p">,</span> <span class="n">password</span><span class="p">:</span> <span class="s2">&quot;abc123&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="n">commit</span> <span class="n">transaction</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="n">rollback</span> <span class="n">transaction</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">errors</span><span class="o">.</span><span class="n">messages</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:&quot;user_account.person&quot;</span><span class="o">=&gt;[</span><span class="s2">&quot;can&#39;t be blank&quot;</span><span class="o">]</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

Para evitar que ocorra a validação quando são usados nested attributes, deve-se informar
na associação user_account para que não seja validado o atributo person, o que é feito via <b>inverse_of</b>:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:user_account_attributes</span>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:name</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">has_one</span> <span class="ss">:user_account</span><span class="p">,</span> <span class="n">inverse_of</span><span class="p">:</span> <span class="ss">:person</span>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:user_account</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>
<h3>Update</h3>
Para uma operação de atualização, é necessário passar em user_account_attributes o id da user_account previamente criada:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">update_attributes</span> <span class="n">user_account_attributes</span><span class="p">:</span> <span class="p">{</span> <span class="nb">id</span><span class="p">:</span><span class="mi">6</span><span class="p">,</span> <span class="n">username</span><span class="p">:</span> <span class="s2">&quot;jsilva11&quot;</span><span class="p">,</span> <span class="n">password</span><span class="p">:</span> <span class="s2">&quot;123456&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">6</span><span class="n">ms</span><span class="p">)</span>  <span class="no">UPDATE</span> <span class="s2">&quot;user_accounts&quot;</span> <span class="no">SET</span> <span class="s2">&quot;username&quot;</span> <span class="o">=</span> <span class="s1">&#39;jsilva11&#39;</span><span class="p">,</span> <span class="s2">&quot;updated_at&quot;</span> <span class="o">=</span> <span class="s1">&#39;2012-07-31 07:43:20.649645&#39;</span> <span class="no">WHERE</span> <span class="s2">&quot;user_accounts&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="o">=</span> <span class="mi">6</span>
</span><span class='line'><span class="p">(</span><span class="mi">49</span><span class="o">.</span><span class="mi">9</span><span class="n">ms</span><span class="p">)</span>  <span class="n">commit</span> <span class="n">transaction</span>
</span></code></pre></td></tr></table></div></figure>
  <p>
    <b><span style="color: red;">CUIDADO</span></b>: caso o id fosse omitido,
    seria feito um novo insert na tabela user_accounts, e o objeto Person seria reassociado à nova user_account.
  </p>

<h3>Destroy</h3>
Para completar este tutorial, suponhamos que faça sentido remover uma user_account, sem remover os respectivos dados de person. Isto pode ser obtido marcando o nested_model com allow_destroy:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:user_account_attributes</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">has_one</span> <span class="ss">:user_account</span><span class="p">,</span> <span class="n">inverse_of</span><span class="p">:</span> <span class="ss">:person</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:user_account</span><span class="p">,</span> <span class="n">allow_destroy</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>
Agora, pode-se remover user_account passando <span style="color: orange;"><b>_destroy: true</b></span> no hash user_account_attributes:

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">update_attributes</span> <span class="n">user_account_attributes</span><span class="p">:</span> <span class="p">{</span> <span class="nb">id</span><span class="p">:</span><span class="mi">6</span><span class="p">,</span> <span class="n">_destroy</span><span class="p">:</span> <span class="kp">true</span> <span class="p">}</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span> <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'><span class="no">UserAccount</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;user_accounts&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;user_accounts&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;user_accounts&quot;</span><span class="o">.</span><span class="s2">&quot;person_id&quot;</span> <span class="o">=</span> <span class="mi">7</span> <span class="no">LIMIT</span> <span class="mi">1</span>
</span><span class='line'><span class="no">SQL</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">9</span><span class="n">ms</span><span class="p">)</span> <span class="no">DELETE</span> <span class="no">FROM</span> <span class="s2">&quot;user_accounts&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;user_accounts&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="o">=</span> <span class="p">?</span> <span class="o">[[</span><span class="s2">&quot;id&quot;</span><span class="p">,</span> <span class="mi">6</span><span class="o">]]</span>
</span><span class='line'><span class="p">(</span><span class="mi">47</span><span class="o">.</span><span class="mi">8</span><span class="n">ms</span><span class="p">)</span> <span class="n">commit</span> <span class="n">transaction</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">reload</span><span class="o">.</span><span class="n">user_account</span>
</span><span class='line'><span class="no">Person</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;people&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;people&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;people&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="o">=</span> <span class="p">?</span> <span class="no">LIMIT</span> <span class="mi">1</span> <span class="o">[[</span><span class="s2">&quot;id&quot;</span><span class="p">,</span> <span class="mi">7</span><span class="o">]]</span>
</span><span class='line'><span class="no">UserAccount</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;user_accounts&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;user_accounts&quot;</span> <span class="no">WHERE</span> <span class="s2">&quot;user_accounts&quot;</span><span class="o">.</span><span class="s2">&quot;person_id&quot;</span> <span class="o">=</span> <span class="mi">7</span> <span class="no">LIMIT</span> <span class="mi">1</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="kp">nil</span>
</span></code></pre></td></tr></table></div></figure>

  <h4>Referências</h4>
  <ul>
    <li><a href="http://guides.rubyonrails.org/getting_started.html#building-a-multi-model-form"
        rel="nofollow" target="_blank">http://guides.rubyonrails.org/getting_started.html#building-a-multi-model-form</a></li>
    <li><a href="http://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html"
        rel="nofollow" target="_blank">http://api.rubyonrails.org/classes/ActiveRecord/NestedAttributes/ClassMethods.html</a></li>
    <li><a href="http://erikonrails.snowedin.net/?p=267" rel="nofollow" target="_blank">http://erikonrails.snowedin.net/?p=267</a></li>
    <li><a href="http://archives.ryandaigle.com/articles/2009/2/1/what-s-new-in-edge-rails-nested-attributes"
        rel="nofollow" target="_blank">http://archives.ryandaigle.com/articles/2009/2/1/what-s-new-in-edge-rails-nested-attributes</a></li>
    <li><a href="http://weblog.rubyonrails.org/2009/1/26/nested-model-forms/"
        rel="nofollow" target="_blank">http://weblog.rubyonrails.org/2009/1/26/nested-model-forms/</a></li>
  </ul>
</div>
]]></content>
  </entry>
  
</feed>
